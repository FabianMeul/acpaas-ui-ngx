{"version":3,"file":"notifications.js.map","sources":["ng://notifications/lib/notifications/services/notifications.service.ts","ng://notifications/lib/notifications/notifications.conf.ts","ng://notifications/lib/notifications/notifications.module.ts","ng://notifications/lib/status-bar/status-bar.conf.ts","ng://notifications/lib/status-bar/components/status-bar/status-bar.component.ts","ng://notifications/lib/status-bar/components/index.ts","ng://notifications/lib/status-bar/status-bar.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { NotificationStore } from '@acpaas-ui/js-notification-store';\n\n@Injectable()\nexport class NotificationsService {\n\tconstructor() {\n\t\treturn new NotificationStore();\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const NOTIFICATIONS_INITIAL_MESSAGES = new InjectionToken('initialMessages');\nexport const NOTIFICATIONS_INITIAL_OPTIONS = new InjectionToken('initialOptions');\n","import {\n\tInject,\n\tOptional,\n\tNgModule,\n\tModuleWithProviders,\n} from '@angular/core';\nimport { NotificationStore } from '@acpaas-ui/js-notification-store';\n\nimport { NotificationsService } from './services/notifications.service';\nimport {\n\tNOTIFICATIONS_INITIAL_MESSAGES,\n\tNOTIFICATIONS_INITIAL_OPTIONS,\n} from './notifications.conf';\nimport {\n\tNotificationsMessages,\n\tNotificationsOptions,\n} from './types/notifications.types';\n\n@NgModule({\n\tproviders: [\n\t\tNotificationsService,\n\t\t{ provide: NOTIFICATIONS_INITIAL_MESSAGES, useValue: {} },\n\t\t{ provide: NOTIFICATIONS_INITIAL_OPTIONS, useValue: {} },\n\t],\n})\nexport class NotificationsModule {\n\tstatic forRoot(\n\t\tmessages: NotificationsMessages,\n\t\toptions: NotificationsOptions\n\t): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: NotificationsModule,\n\t\t\tproviders: [\n\t\t\t\tNotificationsService,\n\t\t\t\t{ provide: NOTIFICATIONS_INITIAL_MESSAGES, useValue: messages },\n\t\t\t\t{ provide: NOTIFICATIONS_INITIAL_OPTIONS, useValue: options },\n\t\t\t],\n\t\t};\n\t}\n\n\tconstructor(\n\t\t@Inject(NOTIFICATIONS_INITIAL_MESSAGES) private messages,\n\t\t@Inject(NOTIFICATIONS_INITIAL_OPTIONS) private options\n\t) {\n\t\tNotificationStore.messages = messages;\n\t\tNotificationStore.options = options;\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StatusbarAvailableTypes } from './types/status-bar.types';\n\nexport const STATUSBAR_AVAILABLE_TYPES = new InjectionToken<StatusbarAvailableTypes>('availableTypes');\n\nexport const STATUSBAR_DEFAULT_TYPES: StatusbarAvailableTypes = {\n\tI: {\n\t\ttype: 'info',\n\t\ticon: 'fa fa-info',\n\t\tclassList: 'info',\n\t},\n\tE: {\n\t\ttype: 'error',\n\t\ticon: 'fa fa-warning',\n\t\tclassList: 'error',\n\t},\n\tW: {\n\t\ttype: 'warning',\n\t\ticon: 'fa fa-warning',\n\t\tclassList: 'warning',\n\t},\n\tS: {\n\t\ttype: 'success',\n\t\ticon: 'fa fa-check',\n\t\tclassList: 'success',\n\t},\n\tN: {\n\t\ttype: 'notification',\n\t\ticon: 'fa fa-bell-o',\n\t\tclassList: 'notification',\n\t},\n};\n","import {\n\tInject,\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tOnChanges,\n\tChangeDetectionStrategy\n} from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { Notification } from '@acpaas-ui/js-notification-store';\nimport { Label } from '@acpaas-ui/ngx-components/utils';\n\nimport {\n\tSTATUSBAR_AVAILABLE_TYPES,\n} from '../../status-bar.conf';\n\n@Component({\n\tselector: 'aui-statusbar',\n\ttemplate: `<div class=\"o-statusbar\" *ngIf=\"activeNotification\" [ngClass]=\"typeClasses[activeNotification.type]\">\n    <span class=\"o-statusbar__status\" [ngClass]=\"iconMap[activeNotification.type]\"></span>\n\n    <div class=\"o-statusbar__notification\">\n        <p>\n            <span [innerHTML]=\"activeNotification.message\"></span>\n            <span *ngIf=\"notifications.length > 1\">(<span [innerHTML]=\"remainingMessage | pluralizeLabel:replaceMap.remaining | interpolateLabel:replaceMap\"></span>)</span>\n        </p>\n    </div>\n\n    <button class=\"a-button has-icon\" (click)=\"onClearNotification()\">\n        <span class=\"fa fa-times\"></span>\n    </button>\n</div>\n`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StatusbarComponent implements OnChanges {\n\t@Input() notifications: Notification[] = [];\n\t@Input() remainingMessage: Label = {\n\t\tsingular: '%{remaining} more',\n\t\tplural: '%{remaining} more',\n\t};\n\t@Output() clearNotification = new EventEmitter();\n\n\tpublic activeNotification: Notification = null;\n\tpublic typeClasses: any = {};\n\tpublic iconMap: any = {};\n\tpublic replaceMap = {\n\t\tremaining: 0,\n\t};\n\n\tprivate notificationTimer;\n\tprivate scopeListener;\n\n\tconstructor(\n\t\t@Inject(STATUSBAR_AVAILABLE_TYPES) private availableTypes,\n\t\tprivate router: Router\n\t) {\n\t\tObject.getOwnPropertyNames(availableTypes)\n\t\t\t.forEach(type => {\n\t\t\t\tthis.typeClasses[type] = availableTypes[type].classList;\n\t\t\t\tthis.iconMap[type] = availableTypes[type].icon;\n\t\t\t});\n\t}\n\n\tclearListeners() {\n\t\tif (this.notificationTimer) {\n\t\t\tclearTimeout(this.notificationTimer);\n\t\t}\n\n\t\tif (this.scopeListener) {\n\t\t\tthis.scopeListener.unsubscribe();\n\t\t}\n\t}\n\n\tsetListeners() {\n\t\tif (this.activeNotification.timer) {\n\t\t\tthis.notificationTimer = setTimeout(this.onClearNotification.bind(this), this.activeNotification.timer);\n\t\t}\n\n\t\tif (this.activeNotification.scope === 'page') {\n\t\t\tthis.scopeListener = this.router.events\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(updatedRoute => {\n\t\t\t\t\t\treturn updatedRoute instanceof NavigationStart;\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.subscribe((updatedRoute => {\n\t\t\t\t\tif (updatedRoute.url !== this.router.url) {\n\t\t\t\t\t\tthis.onClearNotification();\n\t\t\t\t\t}\n\t\t\t\t}).bind(this));\n\t\t}\n\t}\n\n\tngOnChanges() {\n\t\tthis.clearListeners();\n\n\t\tif (Array.isArray(this.notifications) && !!this.notifications.length) {\n\t\t\tthis.activeNotification = this.notifications.slice(-1)[0];\n\t\t\tthis.replaceMap = {\n\t\t\t\tremaining: this.notifications.length - 1,\n\t\t\t};\n\t\t} else {\n\t\t\tthis.activeNotification = null;\n\t\t\tthis.replaceMap = {\n\t\t\t\tremaining: 0,\n\t\t\t};\n\t\t}\n\n\t\tif (this.activeNotification) {\n\t\t\tthis.setListeners();\n\t\t}\n\t}\n\n\tonClearNotification() {\n\t\tthis.clearNotification.emit(this.activeNotification);\n\t}\n}\n","import { StatusbarComponent } from './status-bar/status-bar.component';\n\nexport const Components = [\n\tStatusbarComponent,\n];\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { LabelsModule } from '@acpaas-ui/ngx-components/utils';\n\nimport { Components } from './components';\nimport { StatusbarAvailableTypes } from './types/status-bar.types';\nimport { STATUSBAR_AVAILABLE_TYPES, STATUSBAR_DEFAULT_TYPES } from './status-bar.conf';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule,\n\n\t\tLabelsModule,\n\t],\n\tdeclarations: [\n\t\t...Components,\n\t],\n\texports: [\n\t\t...Components,\n\t],\n\tproviders: [\n\t\t{ provide: STATUSBAR_AVAILABLE_TYPES, useValue: STATUSBAR_DEFAULT_TYPES },\n\t],\n})\nexport class StatusbarModule {\n\tstatic forChild(\n\t\tavailableTypes: StatusbarAvailableTypes\n\t): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StatusbarModule,\n\t\t\tproviders: [\n\t\t\t\t{ provide: STATUSBAR_AVAILABLE_TYPES, useValue: availableTypes },\n\t\t\t],\n\t\t};\n\t}\n}\n"],"names":[],"mappings":"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"}
