{"version":3,"sources":["ng://selectable-list/lib/selectable-list/components/selectable-list/selectable-list.component.ts","ng://selectable-list/lib/selectable-list/directives/selectable-actions.directive.ts","ng://selectable-list/lib/selectable-list/components/index.ts","ng://selectable-list/lib/selectable-list/directives/index.ts","ng://selectable-list/lib/selectable-list/selectable-list.module.ts"],"names":["SelectableListComponent","EventEmitter","prototype","selectItem","item","this","selected","emit","formatLabel","input","inputString","label","search","regEx","RegExp","replace","Component","args","selector","template","Input","Output","ContentChild","TemplateRef","SelectableActionsDirective","onKeyDown","e","key","preventDefault","keyArrowUp","keyArrowDown","keyEnter","keyEscape","Directive","exportAs","HostListener","Components","Directives","SelectableListModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"uUAAA,IAAAA,EAAA,mCAeyB,gBAKuB,IAAIC,EAAAA,oBAI5CD,EAAAE,UAAAC,oBAAWC,GACjBC,KAAKC,SAASC,KAAKH,IAGbJ,EAAAE,UAAAM,qBAAYC,GAClB,IAAMC,EAAeL,KAAKM,MAAQF,EAAMJ,KAAKM,OAASF,EAEtD,IAAKJ,KAAKO,OACT,OAAOF,EAGR,IAAMG,EAAQ,IAAIC,OAAOT,KAAKO,OAAQ,MACtC,OAAOF,EAAYK,QAAQF,EAAO,MAAQR,KAAKO,OAAS,6BAlCzDI,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,sBACVC,SAAU,kqBAUTC,EAAAA,qBACAA,EAAAA,sBACAA,EAAAA,qBACAA,EAAAA,4BACAA,EAAAA,wBAEAC,EAAAA,yBAEAC,EAAAA,aAAYL,KAAA,CAACM,EAAAA,kBAtBf,GCAAC,EAAA,wCAO+B,IAAIvB,EAAAA,+BACF,IAAIA,EAAAA,2BACR,IAAIA,EAAAA,4BACH,IAAIA,EAAAA,oBAG1BuB,EAAAtB,UAAAuB,UADP,SACiBC,GAChB,OAAQA,EAAEC,KACT,IAAK,UACJD,EAAEE,iBACFvB,KAAKwB,WAAWtB,KAAKmB,GACrB,MACD,IAAK,YACJA,EAAEE,iBACFvB,KAAKyB,aAAavB,KAAKmB,GACvB,MACD,IAAK,QACJrB,KAAK0B,SAASxB,KAAKmB,GACnB,MACD,IAAK,SACJrB,KAAK2B,UAAUzB,KAAKmB,yBAzBvBO,EAAAA,UAAShB,KAAA,CAAC,CACVC,SAAU,yBACVgB,SAAU,+DAGTb,EAAAA,6BACAA,EAAAA,yBACAA,EAAAA,0BACAA,EAAAA,0BAEAc,EAAAA,aAAYlB,KAAA,CAAC,UAAW,CAAC,gBAZ3B,GCEamB,EAAa,CACzBpC,GCDYqC,EAAa,CACzBb,GCHDc,EAAA,oDAMCC,EAAAA,SAAQtB,KAAA,CAAC,CACTuB,QAAS,CACRC,EAAAA,cAEDC,aAAc,CACbN,EACAC,GAEDM,QAAS,CACRP,EACAC,SAhBF","sourcesContent":["import { Component, Input, Output, EventEmitter, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'aui-selectable-list',\n\ttemplate: `<ul class=\"aui-selectable-list m-selectable-list m-selectable-list--no-border\">\n    <li class=\"m-selectable-list__item\" *ngFor=\"let item of items; let i=index;\"  (click)=\"selectItem(item)\" [ngClass]=\"i === index ? 'm-selectable-list__item--active' : ''\">\n        <span *ngIf=\"!template && !itemTemplate\" [innerHTML]=\"formatLabel(item)\"></span>\n        <ng-template *ngIf=\"template\" [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ item: item }\"></ng-template>\n        <ng-template *ngIf=\"itemTemplate\" [ngTemplateOutlet]=\"itemTemplate\" [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-template>\n    </li>\n</ul>\n`,\n})\nexport class SelectableListComponent {\n\t@Input() public items: any[];\n\t@Input() public index = 0;\n\t@Input() public search: string;\n\t@Input() public label: string;\n\t@Input() public itemTemplate: TemplateRef<any>;\n\n\t@Output() public selected: EventEmitter<any> = new EventEmitter();\n\n\t@ContentChild(TemplateRef) public template: TemplateRef<any>;\n\n\tpublic selectItem(item) {\n\t\tthis.selected.emit(item);\n\t}\n\n\tpublic formatLabel(input: any) {\n\t\tconst inputString = (this.label ? input[this.label] : input);\n\n\t\tif (!this.search) {\n\t\t\treturn inputString;\n\t\t}\n\n\t\tconst regEx = new RegExp(this.search, 'ig');\n\t\treturn inputString.replace(regEx, '<b>' + this.search + '</b>');\n\t}\n}\n","import { Directive, HostListener, Output, EventEmitter } from '@angular/core';\n\n@Directive({\n\tselector: '[auiSelectableActions]',\n\texportAs: 'auiSelectableActions',\n})\nexport class SelectableActionsDirective {\n\t@Output() public keyArrowUp = new EventEmitter();\n\t@Output() public keyArrowDown = new EventEmitter();\n\t@Output() public keyEnter = new EventEmitter();\n\t@Output() public keyEscape = new EventEmitter();\n\n\t@HostListener('keydown', ['$event'])\n\tpublic onKeyDown(e: KeyboardEvent) {\n\t\tswitch (e.key) {\n\t\t\tcase 'ArrowUp': // UP\n\t\t\t\te.preventDefault(); // Do not change cursor pos\n\t\t\t\tthis.keyArrowUp.emit(e);\n\t\t\t\tbreak;\n\t\t\tcase 'ArrowDown': // DOWN\n\t\t\t\te.preventDefault(); // Do not change cursor pos\n\t\t\t\tthis.keyArrowDown.emit(e);\n\t\t\t\tbreak;\n\t\t\tcase 'Enter': // ENTER\n\t\t\t\tthis.keyEnter.emit(e);\n\t\t\t\tbreak;\n\t\t\tcase 'Escape': // ESCAPE\n\t\t\t\tthis.keyEscape.emit(e);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { SelectableListComponent } from './selectable-list/selectable-list.component';\n\nexport const Components = [\n\tSelectableListComponent,\n];\n","import { SelectableActionsDirective } from './selectable-actions.directive';\n\nexport const Directives = [\n\tSelectableActionsDirective,\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Components } from './components/index';\nimport { Directives } from './directives/index';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t],\n\tdeclarations: [\n\t\tComponents,\n\t\tDirectives,\n\t],\n\texports: [\n\t\tComponents,\n\t\tDirectives,\n\t],\n})\nexport class SelectableListModule {\n\n}\n"]}