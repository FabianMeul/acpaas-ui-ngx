{"version":3,"file":"utils.js.map","sources":["ng://utils/lib/filter/components/checkbox-filter/checkbox-filter.component.ts","ng://utils/lib/filter/components/input-filter/input-filter.component.ts","ng://utils/lib/filter/components/select-filter/select-filter.component.ts","ng://utils/lib/filter/components/index.ts","ng://utils/lib/filter/services/filter.service.ts","ng://utils/lib/filter/filter.module.ts","ng://utils/lib/filter/classes/filter.class.ts","ng://utils/lib/labels/utils/interpolation.ts","ng://utils/lib/labels/pipes/interpolate-label.pipe.ts","ng://utils/lib/labels/pipes/pluralize-label.pipe.ts","ng://utils/lib/labels/pipes/index.ts","ng://utils/lib/labels/labels.module.ts","ng://utils/lib/window/services/window.service.ts","ng://utils/lib/window/window.module.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { FilterComponent } from '../../types/filter.types';\n\n@Component({\n\tselector: 'aui-checkbox-filter',\n\ttemplate: `<ul class=\"a-list a-list--reset aui-checkbox-filter\" *ngIf=\"filter && filter.options && filter.id\">\n\t<li *ngFor=\"let option of filter.options; let i = index;\">\n\t\t<div class=\"a-input\">\n\t\t\t<div class=\"a-input__checkbox\">\n\t\t\t\t<input type=\"checkbox\" [id]=\"option.id\" [name]=\"option.id\" [(ngModel)]=\"option.checked\" (ngModelChange)=\"onFilter()\">\n\t\t\t\t<label [for]=\"option.id\">{{ option.name }}</label>\n\t\t\t</div>\n\t\t</div>\n\t</li>\n</ul>\n`,\n})\nexport class CheckboxFilterComponent implements OnInit, FilterComponent {\n\t@Input() filter;\n\t@Output() update = new EventEmitter();\n\tpublic value;\n\n\tpublic ngOnInit() {\n\t\tif (this.filter) {\n\t\t\tthis.value = this.filter.value;\n\t\t}\n\t\tthis.onFilter();\n\t}\n\n\tpublic onFilter() {\n\t\tconst value = this.filter.options.filter(option => {\n\t\t\treturn option.checked;\n\t\t});\n\t\tthis.update.emit(value);\n\t}\n}\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { FilterComponent } from '../../types/filter.types';\n\n@Component({\n\tselector: 'aui-input-filter',\n\ttemplate: `<div class=\"a-input has-icon-right aui-input-filter\">\n\t<ng-container *ngIf=\"filter\">\n\t\t<div class=\"a-input__wrapper\">\n\t\t\t<input type=\"text\" [placeholder]=\"filter.name\" [(ngModel)]=\"value\" (ngModelChange)=\"onFilter(value)\">\n\t\t\t<span class=\"fa fa-search\"></span>\n\t\t</div>\n\t</ng-container>\n</div>\n`,\n})\nexport class InputFilterComponent implements OnInit, FilterComponent {\n\t@Input() filter;\n\t@Output() update = new EventEmitter();\n\tpublic value;\n\n\tngOnInit() {\n\t\tif (this.filter) {\n\t\t\tthis.value = this.filter.value;\n\t\t}\n\t}\n\n\tpublic onFilter(value) {\n\t\tthis.update.emit(value);\n\t}\n}\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { FilterComponent } from '../../types/filter.types';\n\n@Component({\n\tselector: 'aui-select-filter',\n\ttemplate: `<div class=\"a-input has-icon-right aui-select-filter\">\n\t<ng-container *ngIf=\"filter && filter.options && filter.id\">\n\t\t<label class=\"a-input__label a-input__label--inline\" [for]=\"filter.id\">{{ filter.name }}: </label>\n\t\t<div class=\"a-input__wrapper a-input__wrapper--inline\">\n\t\t\t<select [name]=\"filter.id\" [id]=\"filter.id\" [(ngModel)]=\"value\" (ngModelChange)=\"onFilter(value)\">\n\t\t\t\t<option *ngFor=\"let option of filter.options; let i = index;\" [ngValue]=\"option\">{{ option.name }}</option>\n\t\t\t</select>\n\t\t\t<span class=\"fa fa-angle-down\"></span>\n\t\t</div>\n\t</ng-container>\n</div>\n`,\n})\nexport class SelectFilterComponent implements OnInit, FilterComponent {\n\t@Input() filter;\n\t@Output() update = new EventEmitter();\n\tpublic value;\n\n\tpublic ngOnInit() {\n\t\tif (this.filter) {\n\t\t\tthis.value = this.filter.value;\n\t\t}\n\t}\n\n\tpublic onFilter(value) {\n\t\tthis.update.emit(value);\n\t}\n}\n","import { CheckboxFilterComponent } from './checkbox-filter/checkbox-filter.component';\nimport { InputFilterComponent } from './input-filter/input-filter.component';\nimport { SelectFilterComponent } from './select-filter/select-filter.component';\n\n\nconst Components = [\n\tCheckboxFilterComponent,\n\tInputFilterComponent,\n\tSelectFilterComponent,\n];\n\nexport {\n\tComponents,\n\n\tCheckboxFilterComponent,\n\tInputFilterComponent,\n\tSelectFilterComponent,\n};\n","import { Injectable } from '@angular/core';\n\nimport { Filter } from '../classes/filter.class';\n\n@Injectable()\nexport class FilterService {\n\tpublic filterData(data: any[], filters: Filter[]) {\n\t\tfilters.forEach((filter) => {\n\t\t\tdata = filter.parseData(data);\n\t\t});\n\t\treturn data;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { Components } from './components/index';\nimport { FilterService } from './services/filter.service';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t],\n\tdeclarations: [\n\t\tComponents,\n\t],\n\tproviders: [\n\t\tFilterService,\n\t],\n\texports: [\n\t\tComponents,\n\t],\n})\nexport class FilterModule {}\n","export class Filter {\n\tpublic id: string;\n\tpublic name: string;\n\tpublic options: any[];\n\tpublic value: string | any[];\n\tpublic parse: (data: any[], value: any) => any[];\n\n\tpublic parseData(data) {\n\t\treturn this.parse(data, this.value);\n\t}\n}\n","import { ReplaceData } from '../types/labels.types';\n\nexport const interpolate = (label: string, replaceData?: ReplaceData): string => {\n\tif (!replaceData) {\n\t\treturn label;\n\t}\n\n\tconst escapeStringRegExp = prop => prop.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\tconst pattern = new RegExp(`\\%{(${Object.keys(replaceData).map(escapeStringRegExp).join('|')})\\}`, 'g');\n\n\treturn label.replace(pattern, (match, prop) => replaceData[prop] ? String(replaceData[prop]) : '');\n};\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { interpolate } from '../utils/interpolation';\nimport { ReplaceData, Label } from '../types/labels.types';\n\n@Pipe({\n\tname: 'interpolateLabel',\n})\nexport class InterpolateLabelPipe implements PipeTransform {\n\ttransform(label: string, replaceData: ReplaceData): string {\n\t\tif (!replaceData || !label) {\n\t\t\treturn label;\n\t\t}\n\n\t\treturn interpolate(label, replaceData);\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { Label } from '../types/labels.types';\n\n\n@Pipe({\n\tname: 'pluralizeLabel',\n})\nexport class PluralizeLabelPipe implements PipeTransform {\n\ttransform(label: Label|string, count: number): string {\n\t\tif (!label || typeof label === 'string') {\n\t\t\treturn label as string;\n\t\t}\n\n\t\treturn count === 1 ? label.singular : label.plural;\n\t}\n}\n","import { PluralizeLabelPipe } from './pluralize-label.pipe';\nimport { InterpolateLabelPipe } from './interpolate-label.pipe';\n\nexport const Pipes = [\n\tPluralizeLabelPipe,\n\tInterpolateLabelPipe,\n];\n","import { NgModule } from '@angular/core';\n\nimport { Pipes } from './pipes/index';\n\n@NgModule({\n\tdeclarations: [\n\t\tPipes,\n\t],\n\texports: [\n\t\tPipes,\n\t],\n})\nexport class LabelsModule {\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { ClassProvider, FactoryProvider, InjectionToken, PLATFORM_ID } from '@angular/core';\n\n/* Create a new injection token for injecting the window into a component. */\nexport const WINDOW = new InjectionToken('WindowToken');\n\n/* Define abstract class for obtaining reference to the global window object. */\nexport abstract class WindowRef {\n\tget nativeWindow(): Window | Object {\n\t\tthrow new Error('Not implemented.');\n\t}\n}\n\n/* Define class that implements the abstract class and returns the native window object. */\nexport class BrowserWindowRef extends WindowRef {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tget nativeWindow(): Window | Object {\n\t\treturn window;\n\t}\n}\n\n/* Create an factory function that returns the native window object. */\nexport function windowFactory(browserWindowRef: BrowserWindowRef, platformId: Object): Window | Object {\n\tif (isPlatformBrowser(platformId)) {\n\t\treturn browserWindowRef.nativeWindow;\n\t}\n\treturn new Object();\n}\n\n/* Create a injectable provider for the WindowRef token that uses the BrowserWindowRef class. */\nconst browserWindowProvider: ClassProvider = {\n\tprovide: WindowRef,\n\tuseClass: BrowserWindowRef,\n};\n\n/* Create an injectable provider that uses the windowFactory function for returning the native window object. */\nconst windowProvider: FactoryProvider = {\n\tprovide: WINDOW,\n\tuseFactory: windowFactory,\n\tdeps: [WindowRef, PLATFORM_ID],\n};\n\n/* Create an array of providers. */\nexport const WINDOW_PROVIDERS = [\n\tbrowserWindowProvider,\n\twindowProvider,\n];\n","import { NgModule } from '@angular/core';\n\nimport { WINDOW_PROVIDERS } from './services/window.service';\n\n@NgModule({\n\tproviders: [\n\t\tWINDOW_PROVIDERS,\n\t],\n})\nexport class WindowModule {\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}
