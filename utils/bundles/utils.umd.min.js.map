{"version":3,"sources":["ng://utils/lib/filter/components/checkbox-filter/checkbox-filter.component.ts","ng://utils/lib/filter/components/input-filter/input-filter.component.ts","ng://utils/lib/filter/components/select-filter/select-filter.component.ts","ng://utils/lib/filter/components/index.ts","ng://utils/lib/filter/services/filter.service.ts","ng://utils/lib/filter/filter.module.ts","ng://utils/lib/filter/classes/filter.class.ts","ng://utils/lib/labels/utils/interpolation.ts","ng://utils/lib/labels/pipes/interpolate-label.pipe.ts","ng://utils/lib/labels/pipes/pluralize-label.pipe.ts","ng://utils/lib/labels/pipes/index.ts","ng://utils/lib/labels/labels.module.ts","null","ng://utils/lib/window/services/window.service.ts","ng://utils/lib/window/window.module.ts"],"names":["CheckboxFilterComponent","EventEmitter","prototype","ngOnInit","this","filter","value","onFilter","options","option","checked","update","emit","Component","args","selector","template","Input","Output","InputFilterComponent","SelectFilterComponent","Components","FilterService","filterData","data","filters","forEach","parseData","Injectable","FilterModule","NgModule","imports","CommonModule","FormsModule","declarations","providers","exports","Filter","parse","interpolate","label","replaceData","pattern","RegExp","Object","keys","map","prop","replace","join","match","String","InterpolateLabelPipe","transform","Pipe","name","PluralizeLabelPipe","count","singular","plural","Pipes","LabelsModule","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","WINDOW","InjectionToken","WindowRef","defineProperty","Error","BrowserWindowRef","_super","call","__","constructor","create","tslib_1.__extends","window","windowFactory","browserWindowRef","platformId","isPlatformBrowser","nativeWindow","WINDOW_PROVIDERS","provide","useClass","useFactory","deps","PLATFORM_ID","WindowModule"],"mappings":"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","sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { FilterComponent } from '../../types/filter.types';\n\n@Component({\n\tselector: 'aui-checkbox-filter',\n\ttemplate: `<ul class=\"a-list a-list--reset aui-checkbox-filter\" *ngIf=\"filter && filter.options && filter.id\">\n\t<li *ngFor=\"let option of filter.options; let i = index;\">\n\t\t<div class=\"a-input\">\n\t\t\t<div class=\"a-input__checkbox\">\n\t\t\t\t<input type=\"checkbox\" [id]=\"option.id\" [name]=\"option.id\" [(ngModel)]=\"option.checked\" (ngModelChange)=\"onFilter()\">\n\t\t\t\t<label [for]=\"option.id\">{{ option.name }}</label>\n\t\t\t</div>\n\t\t</div>\n\t</li>\n</ul>\n`,\n})\nexport class CheckboxFilterComponent implements OnInit, FilterComponent {\n\t@Input() filter;\n\t@Output() update = new EventEmitter();\n\tpublic value;\n\n\tpublic ngOnInit() {\n\t\tif (this.filter) {\n\t\t\tthis.value = this.filter.value;\n\t\t}\n\t\tthis.onFilter();\n\t}\n\n\tpublic onFilter() {\n\t\tconst value = this.filter.options.filter(option => {\n\t\t\treturn option.checked;\n\t\t});\n\t\tthis.update.emit(value);\n\t}\n}\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { FilterComponent } from '../../types/filter.types';\n\n@Component({\n\tselector: 'aui-input-filter',\n\ttemplate: `<div class=\"a-input has-icon-right aui-input-filter\">\n\t<ng-container *ngIf=\"filter\">\n\t\t<div class=\"a-input__wrapper\">\n\t\t\t<input type=\"text\" [placeholder]=\"filter.name\" [(ngModel)]=\"value\" (ngModelChange)=\"onFilter(value)\">\n\t\t\t<span class=\"fa fa-search\"></span>\n\t\t</div>\n\t</ng-container>\n</div>\n`,\n})\nexport class InputFilterComponent implements OnInit, FilterComponent {\n\t@Input() filter;\n\t@Output() update = new EventEmitter();\n\tpublic value;\n\n\tngOnInit() {\n\t\tif (this.filter) {\n\t\t\tthis.value = this.filter.value;\n\t\t}\n\t}\n\n\tpublic onFilter(value) {\n\t\tthis.update.emit(value);\n\t}\n}\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { FilterComponent } from '../../types/filter.types';\n\n@Component({\n\tselector: 'aui-select-filter',\n\ttemplate: `<div class=\"a-input has-icon-right aui-select-filter\">\n\t<ng-container *ngIf=\"filter && filter.options && filter.id\">\n\t\t<label class=\"a-input__label a-input__label--inline\" [for]=\"filter.id\">{{ filter.name }}: </label>\n\t\t<div class=\"a-input__wrapper a-input__wrapper--inline\">\n\t\t\t<select [name]=\"filter.id\" [id]=\"filter.id\" [(ngModel)]=\"value\" (ngModelChange)=\"onFilter(value)\">\n\t\t\t\t<option *ngFor=\"let option of filter.options; let i = index;\" [ngValue]=\"option\">{{ option.name }}</option>\n\t\t\t</select>\n\t\t\t<span class=\"fa fa-angle-down\"></span>\n\t\t</div>\n\t</ng-container>\n</div>\n`,\n})\nexport class SelectFilterComponent implements OnInit, FilterComponent {\n\t@Input() filter;\n\t@Output() update = new EventEmitter();\n\tpublic value;\n\n\tpublic ngOnInit() {\n\t\tif (this.filter) {\n\t\t\tthis.value = this.filter.value;\n\t\t}\n\t}\n\n\tpublic onFilter(value) {\n\t\tthis.update.emit(value);\n\t}\n}\n","import { CheckboxFilterComponent } from './checkbox-filter/checkbox-filter.component';\nimport { InputFilterComponent } from './input-filter/input-filter.component';\nimport { SelectFilterComponent } from './select-filter/select-filter.component';\n\n\nconst Components = [\n\tCheckboxFilterComponent,\n\tInputFilterComponent,\n\tSelectFilterComponent,\n];\n\nexport {\n\tComponents,\n\n\tCheckboxFilterComponent,\n\tInputFilterComponent,\n\tSelectFilterComponent,\n};\n","import { Injectable } from '@angular/core';\n\nimport { Filter } from '../classes/filter.class';\n\n@Injectable()\nexport class FilterService {\n\tpublic filterData(data: any[], filters: Filter[]) {\n\t\tfilters.forEach((filter) => {\n\t\t\tdata = filter.parseData(data);\n\t\t});\n\t\treturn data;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { Components } from './components/index';\nimport { FilterService } from './services/filter.service';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t],\n\tdeclarations: [\n\t\tComponents,\n\t],\n\tproviders: [\n\t\tFilterService,\n\t],\n\texports: [\n\t\tComponents,\n\t],\n})\nexport class FilterModule {}\n","export class Filter {\n\tpublic id: string;\n\tpublic name: string;\n\tpublic options: any[];\n\tpublic value: string | any[];\n\tpublic parse: (data: any[], value: any) => any[];\n\n\tpublic parseData(data) {\n\t\treturn this.parse(data, this.value);\n\t}\n}\n","import { ReplaceData } from '../types/labels.types';\n\nexport const interpolate = (label: string, replaceData?: ReplaceData): string => {\n\tif (!replaceData) {\n\t\treturn label;\n\t}\n\n\tconst escapeStringRegExp = prop => prop.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\tconst pattern = new RegExp(`\\%{(${Object.keys(replaceData).map(escapeStringRegExp).join('|')})\\}`, 'g');\n\n\treturn label.replace(pattern, (match, prop) => replaceData[prop] ? String(replaceData[prop]) : '');\n};\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { interpolate } from '../utils/interpolation';\nimport { ReplaceData, Label } from '../types/labels.types';\n\n@Pipe({\n\tname: 'interpolateLabel',\n})\nexport class InterpolateLabelPipe implements PipeTransform {\n\ttransform(label: string, replaceData: ReplaceData): string {\n\t\tif (!replaceData || !label) {\n\t\t\treturn label;\n\t\t}\n\n\t\treturn interpolate(label, replaceData);\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { Label } from '../types/labels.types';\n\n\n@Pipe({\n\tname: 'pluralizeLabel',\n})\nexport class PluralizeLabelPipe implements PipeTransform {\n\ttransform(label: Label|string, count: number): string {\n\t\tif (!label || typeof label === 'string') {\n\t\t\treturn label as string;\n\t\t}\n\n\t\treturn count === 1 ? label.singular : label.plural;\n\t}\n}\n","import { PluralizeLabelPipe } from './pluralize-label.pipe';\nimport { InterpolateLabelPipe } from './interpolate-label.pipe';\n\nexport const Pipes = [\n\tPluralizeLabelPipe,\n\tInterpolateLabelPipe,\n];\n","import { NgModule } from '@angular/core';\n\nimport { Pipes } from './pipes/index';\n\n@NgModule({\n\tdeclarations: [\n\t\tPipes,\n\t],\n\texports: [\n\t\tPipes,\n\t],\n})\nexport class LabelsModule {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}","import { isPlatformBrowser } from '@angular/common';\nimport { ClassProvider, FactoryProvider, InjectionToken, PLATFORM_ID } from '@angular/core';\n\n/* Create a new injection token for injecting the window into a component. */\nexport const WINDOW = new InjectionToken('WindowToken');\n\n/* Define abstract class for obtaining reference to the global window object. */\nexport abstract class WindowRef {\n\tget nativeWindow(): Window | Object {\n\t\tthrow new Error('Not implemented.');\n\t}\n}\n\n/* Define class that implements the abstract class and returns the native window object. */\nexport class BrowserWindowRef extends WindowRef {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tget nativeWindow(): Window | Object {\n\t\treturn window;\n\t}\n}\n\n/* Create an factory function that returns the native window object. */\nexport function windowFactory(browserWindowRef: BrowserWindowRef, platformId: Object): Window | Object {\n\tif (isPlatformBrowser(platformId)) {\n\t\treturn browserWindowRef.nativeWindow;\n\t}\n\treturn new Object();\n}\n\n/* Create a injectable provider for the WindowRef token that uses the BrowserWindowRef class. */\nconst browserWindowProvider: ClassProvider = {\n\tprovide: WindowRef,\n\tuseClass: BrowserWindowRef,\n};\n\n/* Create an injectable provider that uses the windowFactory function for returning the native window object. */\nconst windowProvider: FactoryProvider = {\n\tprovide: WINDOW,\n\tuseFactory: windowFactory,\n\tdeps: [WindowRef, PLATFORM_ID],\n};\n\n/* Create an array of providers. */\nexport const WINDOW_PROVIDERS = [\n\tbrowserWindowProvider,\n\twindowProvider,\n];\n","import { NgModule } from '@angular/core';\n\nimport { WINDOW_PROVIDERS } from './services/window.service';\n\n@NgModule({\n\tproviders: [\n\t\tWINDOW_PROVIDERS,\n\t],\n})\nexport class WindowModule {\n}\n"]}