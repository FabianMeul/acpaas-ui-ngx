!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@acpaas-ui/js-date-utils"),require("lodash-es"),require("@angular/common")):"function"==typeof define&&define.amd?define("calendar",["exports","@angular/core","@acpaas-ui/js-date-utils","lodash-es","@angular/common"],t):t(e.calendar={},e.ng.core,null,null,e.ng.common)}(this,function(e,n,c,o,t){"use strict";var r="CALENDAR_VIEW_MONTH",i="CALENDAR_VIEW_YEAR",s="CALENDAR_VIEW_DECENNIA",l=Object.assign||function(e){for(var t,a=1,n=arguments.length;a<n;a++)for(var r in t=arguments[a])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e};function a(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var n,r,i=a.call(e),o=[];try{for(;(void 0===t||0<t--)&&!(n=i.next()).done;)o.push(n.value)}catch(s){r={error:s}}finally{try{n&&!n.done&&(a=i["return"])&&a.call(i)}finally{if(r)throw r.error}}return o}function u(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(a(arguments[t]));return e}var d=function(){function e(){this.months={}}return e.prototype.getMonth=function(e,t){if(t&&(this.currentYear!==t&&(this.months={}),this.currentYear=t),this.months.hasOwnProperty(e))return u(this.months[e]);var a=new Date;a.setMonth(e,1),t&&a.setFullYear(t);var n=c.DateGenerator.generateMonth(a,{startOfWeek:1,padding:!0,generatePadding:!0});return u(this.months[e]=n)},e.prototype.getMonthForDate=function(e){return this.getMonth(e.getMonth(),e.getFullYear())},e.prototype.getRangeForDate=function(e,t){return c.DateGenerator.generateRange(e,t,{startOfWeek:1})},e.prototype.getRangesForDate=function(e,t){var a={startOfWeek:1},n=c.DateHelper.updateMonth(e,e.getMonth()-1),r=c.DateHelper.updateMonth(e,e.getMonth()+1);return{before:c.DateGenerator.generateRange(n,t,a),current:c.DateGenerator.generateRange(e,t,a),after:c.DateGenerator.generateRange(r,t,a)}},e.prototype.getClosestDateForRange=function(e,t){void 0===e&&(e=new Date);var a=this.getRangeForDate(e,t);return c.DateHelper.dateOutOfRange(e,a)?e:c.DateHelper.closestDateForRange(e,a)},e.decorators=[{type:n.Injectable}],e}(),h=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],p=["January","February","March","April","May","June","July","August","September","October","November","December"],D=new n.InjectionToken("weekdayLabels"),g=new n.InjectionToken("monthLabels"),y=function(){function e(e,t,a){void 0===e&&(e=p),void 0===t&&(t=h),this.moduleMonthLabels=e,this.moduleWeekdayLabels=t,this.calendarService=a,this.selectDate=new n.EventEmitter,this.CALENDAR_VIEW_MONTH=r,this.CALENDAR_VIEW_YEAR=i,this.CALENDAR_VIEW_DECENNIA=s,this.activeView=r,this.headerLabel=""}return e.prototype.ngOnInit=function(){this.weekdayLabels=this.weekdayLabels||this.moduleWeekdayLabels,this.monthLabels=this.monthLabels||this.moduleMonthLabels,this.activeDate=this.calendarService.getClosestDateForRange(this.activeDate,this.range),this.updateHeaderLabel()},e.prototype.ngOnChanges=function(e){var t=e.selectedDate&&e.selectedDate.currentValue?e.selectedDate:null;"undefined"!=typeof this.monthLabels&&t&&!c.DateHelper.datesAreEqual(t.currentValue,t.previousValue)&&(this.activeDate=this.selectedDate,this.updateHeaderLabel())},e.prototype.updateActiveDate=function(e){if(void 0===e&&(e=0),0!==e){var t=this.activeDate?new Date(this.activeDate):new Date;switch(this.activeView){case r:t.setMonth(t.getMonth()+e);break;case i:t.setFullYear(t.getFullYear()+e);break;case s:t.setFullYear(t.getFullYear()+12*e)}this.activeDate=t,this.updateHeaderLabel()}},e.prototype.switchView=function(e){void 0===e&&(e=1);var t=[r,i,s],a=t.indexOf(this.activeView),n=a+e>=t.length?0:a+e;n=n<0?t.length-1:n,this.activeView=t[n],this.selectedDate&&0===n&&1===e&&(this.activeDate=this.selectedDate),this.updateHeaderLabel()},e.prototype.updateHeaderLabel=function(){switch(this.activeView){case r:this.headerLabel=this.monthLabels[this.activeDate.getMonth()]+" "+this.activeDate.getFullYear();break;case i:this.headerLabel=String(this.activeDate.getFullYear());break;case s:var e=this.activeDate.getFullYear();this.headerLabel=e+" - "+(e+11)}},e.prototype.pickDate=function(e){var t=this.activeView===r;this.selectDate.emit({date:e,complete:t}),t||this.switchView(-1)},e.decorators=[{type:n.Component,args:[{selector:"aui-calendar",template:'<div class="m-datepicker__nav">\n    <button tabindex="-1" type="button" aria-label="vorige maand" class="a-button has-icon" (click)="updateActiveDate(-1)">\n        <i class="fa fa-angle-left"></i>\n    </button>\n\n    <button tabindex="0" type="button" class="m-datepicker__title a-button" (click)="switchView()">\n        {{ headerLabel | titlecase }}\n    </button>\n\n    <button tabindex="0" type="button" aria-label="volgende maand" class="a-button has-icon" (click)="updateActiveDate(1)">\n        <i class="fa fa-angle-right"></i>\n    </button>\n</div>\n\n<aui-calendar-month\n    *ngIf="activeView === CALENDAR_VIEW_MONTH"\n    [selectedDate]="selectedDate"\n    [activeDate]="activeDate"\n    [range]="range"\n    [weekdayLabels]="weekdayLabels"\n    (selectDate)="pickDate($event)"\n></aui-calendar-month>\n<aui-calendar-year\n    *ngIf="activeView === CALENDAR_VIEW_YEAR"\n    [selectedDate]="selectedDate"\n    [activeDate]="activeDate"\n    [monthLabels]="monthLabels"\n    (selectDate)="pickDate($event)"\n></aui-calendar-year>\n<aui-calendar-decennia\n    *ngIf="activeView === CALENDAR_VIEW_DECENNIA"\n    [selectedDate]="selectedDate"\n    [activeDate]="activeDate"\n    (selectDate)="pickDate($event)"\n></aui-calendar-decennia>\n',changeDetection:n.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:undefined,decorators:[{type:n.Inject,args:[g]}]},{type:undefined,decorators:[{type:n.Inject,args:[D]}]},{type:d}]},e.propDecorators={selectedDate:[{type:n.Input}],range:[{type:n.Input}],weekdayLabels:[{type:n.Input}],monthLabels:[{type:n.Input}],selectDate:[{type:n.Output}]},e}(),v=function(){function e(){this.selectDate=new n.EventEmitter,this.years=[],this.selectedYear=-1,this.current=-1}return e.prototype.ngOnInit=function(){var e=new Date;this.current=e.getFullYear()},e.prototype.ngOnChanges=function(e){var t=o.get(e,"activeDate.currentValue"),a=o.get(e,"activeDate.previousValue"),n=t instanceof Date?t.getFullYear():-1,r=a instanceof Date?a.getFullYear():-1;0<=n&&(n<r||r+11<n)&&this.updateYears(),this.selectedYear=this.selectedDate instanceof Date?this.selectedDate.getFullYear():-1},e.prototype.pickDate=function(e,t){e.stopPropagation();var a=new Date(this.activeDate);a.setFullYear(t),this.selectDate.emit(a)},e.prototype.updateYears=function(){for(var e=[],t=this.activeDate.getFullYear(),a=t;a<t+12;a+=1)e.push(a);this.years=o.chunk(e,4)},e.decorators=[{type:n.Component,args:[{selector:"aui-calendar-decennia",template:'<table>\n    <tbody class="m-datepicker__calendar">\n        <tr *ngFor="let group of years">\n            <td *ngFor="let year of group">\n                <button tabindex="0" type="button" [ngClass]="{\n                    \'is-current\': year === current,\n                    \'is-selected\': year === selectedYear\n                }" (click)="pickDate($event, year)">\n                    {{ year }}\n                </button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n',changeDetection:n.ChangeDetectionStrategy.OnPush}]}],e.propDecorators={selectedDate:[{type:n.Input}],activeDate:[{type:n.Input}],selectDate:[{type:n.Output}]},e}(),f=function(){function e(e,t){void 0===e&&(e=h),this.moduleWeekdayLabels=e,this.calendarService=t,this.weekdayLabels=h,this.selectDate=new n.EventEmitter,this.dates=[],this.selectedDay=-1}return e.prototype.ngOnInit=function(){this.weekdayLabels=this.weekdayLabels||this.moduleWeekdayLabels},e.prototype.ngOnChanges=function(e){var t=this,a=this.hasChanged(e,"selectedDate"),n=this.hasChanged(e,"activeDate"),r=n&&!c.DateHelper.datesAreEqual([e.activeDate.currentValue,e.activeDate.previousValue],"M"),i=this.selectedDate&&this.activeDate.getMonth()===this.selectedDate.getMonth();this.current=this.getCurrentDate(),this.selectedDay=i?this.selectedDate.getDate():-1;var o=[];if(a)o=this.calendarService.getMonthForDate(this.selectedDate);else{if(!n||!r)return;o=this.calendarService.getMonthForDate(this.activeDate)}var s=this.calendarService.getRangesForDate(this.activeDate,this.range);this.dates=o.map(function(e){return e.map(function(e){return l({},e,{available:t.dayIsAvailable(e,s)})})})},e.prototype.pickDate=function(e,t){e.stopPropagation();var a=new Date(this.activeDate);if(t.padding){var n=20<t.date?-1:1;a=c.DateHelper.updateMonth(a,a.getMonth()+n)}this.selectDate.emit(c.DateHelper.updateDate(a,t.date))},e.prototype.hasChanged=function(e,t){var a=o.get(e,t+".currentValue"),n=o.get(e,t+".previousValue"),r=a instanceof Date?a.valueOf():0,i=n instanceof Date?n.valueOf():0;return!!r&&r!==i},e.prototype.getCurrentDate=function(){var e=new Date;return!c.DateHelper.datesAreEqual([this.activeDate,e],["M","Y"])?-1:e.getDate()},e.prototype.dayIsAvailable=function(e,t){var a=t.current;return e.padding&&(a=20<e.date?t.before:t.after),a.indexOf(e.date)<0},e.decorators=[{type:n.Component,args:[{selector:"aui-calendar-month",template:'<table>\n    <thead>\n        <tr class="m-datepicker__days">\n            <th *ngFor="let day of weekdayLabels" title={{day}}>{{ day | slice:0:2 | titlecase }}</th>\n        </tr>\n    </thead>\n\n    <tbody class="m-datepicker__calendar">\n        <tr *ngFor="let week of dates">\n            <td *ngFor="let day of week">\n                <button\n                    tabindex="0"\n                    type="button"\n                    [ngClass]="{\n                        \'is-faded\': !day.date || day.padding,\n                        \'is-selected\': !day.padding && day.date === selectedDay,\n                        \'is-current\': !day.padding && day.date === current\n                    }"\n                    (click)="pickDate($event, day)"\n                    [disabled]="!day.available"\n                >{{ day.date }}</button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n',changeDetection:n.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:undefined,decorators:[{type:n.Inject,args:[D]}]},{type:d}]},e.propDecorators={selectedDate:[{type:n.Input}],activeDate:[{type:n.Input}],range:[{type:n.Input}],weekdayLabels:[{type:n.Input}],selectDate:[{type:n.Output}]},e}(),b=function(){function e(e){void 0===e&&(e=p),this.moduleMonthLabels=e,this.monthLabels=p,this.selectDate=new n.EventEmitter,this.selectedMonth=-1,this.current="",this.months=[]}return e.prototype.ngOnChanges=function(e){var t=o.get(e,"activeDate.currentValue"),a=t instanceof Date?t.getFullYear():-1,n=this.selectedDate&&this.selectedDate.getFullYear()===this.activeDate.getFullYear(),r=new Date;this.current=a===r.getFullYear()?this.monthLabels[r.getMonth()]:"",this.selectedMonth=n?this.selectedDate.getMonth():-1,e.monthLabels&&(this.monthLabels=this.monthLabels||this.moduleMonthLabels,this.months=o.chunk(this.monthLabels,4))},e.prototype.pickDate=function(e,t){e.stopPropagation();var a=new Date(this.activeDate);a=c.DateHelper.updateMonth(a,this.monthLabels.indexOf(t)),this.selectDate.emit(a)},e.decorators=[{type:n.Component,args:[{selector:"aui-calendar-year",template:'<table>\n    <tbody class="m-datepicker__calendar">\n        <tr *ngFor="let group of months">\n            <td *ngFor="let month of group">\n                <button tabindex="0" type="button" [ngClass]="{\n                    \'is-current\': month === current,\n                    \'is-selected\': month === monthLabels[selectedMonth]\n                }" (click)="pickDate($event, month)">\n                    {{ month | titlecase }}\n                </button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n',changeDetection:n.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:undefined,decorators:[{type:n.Inject,args:[g]}]}]},e.propDecorators={selectedDate:[{type:n.Input}],activeDate:[{type:n.Input}],monthLabels:[{type:n.Input}],selectDate:[{type:n.Output}]},e}(),m=[y,v,f,b],L=[d];var E=function(){function e(){}return e.prototype.transform=function(e){return e&&"string"==typeof e?e.split(/\s/g).map(function(e){return(t=e)?t[0].toUpperCase()+t.substr(1).toLowerCase():t;var t}).join(" "):e},e.decorators=[{type:n.Pipe,args:[{name:"titlecase"}]}],e}(),A=[E],C=h,k=p,w=function(){function a(){}return a.forChild=function(e,t){return{ngModule:a,providers:[d,{provide:D,useValue:e},{provide:g,useValue:t}]}},a.decorators=[{type:n.NgModule,args:[{imports:[t.CommonModule],declarations:[m,A],exports:[m,A],providers:[L,{provide:D,useValue:C},{provide:g,useValue:k}]}]}],a}();e.CALENDAR_VIEW_DECENNIA=s,e.CALENDAR_VIEW_MONTH=r,e.CALENDAR_VIEW_YEAR=i,e.CalendarService=d,e.CalendarComponent=y,e.CalendarMonthComponent=f,e.CalendarYearComponent=b,e.CalendarDecenniaComponent=v,e.CALENDAR_DEFAULT_MONTH_LABELS=p,e.CALENDAR_DEFAULT_WEEKDAY_LABELS=h,e.CALENDAR_MONTH_LABELS=g,e.CALENDAR_WEEKDAY_LABELS=D,e.CalendarModule=w,e.TitleCasePipe=E,e.ɵa=m,e.ɵb=A,e.ɵc=L,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=calendar.umd.min.js.map