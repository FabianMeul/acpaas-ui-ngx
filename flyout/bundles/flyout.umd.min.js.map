{"version":3,"sources":["ng://flyout/lib/flyout/directives/flyout-zone.directive.ts","ng://flyout/lib/flyout/services/flyout.service.ts","ng://flyout/lib/flyout/types/flyout.types.ts","ng://flyout/lib/flyout/directives/flyout.directive.ts","ng://flyout/lib/flyout/directives/flyout-action.directive.ts","ng://flyout/lib/flyout/directives/flyout-close.directive.ts","ng://flyout/lib/flyout/directives/index.ts","ng://flyout/lib/flyout/services/index.ts","ng://flyout/lib/flyout/flyout.module.ts","ng://flyout/lib/flyout-button/types/flyout-button.types.ts","ng://flyout/lib/flyout-button/components/flyout-button/flyout-button.component.ts","ng://flyout/lib/flyout-button/components/index.ts","ng://flyout/lib/flyout-button/flyout-button.module.ts"],"names":["FlyoutZoneDirective","elementRef","this","element","nativeElement","prototype","contains","auiFlyoutZone","Directive","args","selector","exportAs","ElementRef","HostBinding","Input","FlyoutService","Subject","close","subject","next","Injectable","FlyoutDirective","flyoutService","_this","FlyoutSize","Auto","EventEmitter","pipe","takeUntil","destroyed$","subscribe","res","Object","defineProperty","align","size","flyoutOpened","ngOnDestroy","open","opened","emit","undefined","closed","isInClosableZone","flyoutZone","isOpened","Output","ContentChild","FlyoutActionDirective","flyout","platformId","closeDropdownOnOutsideClick","event","closeIfInClosableZone","isPlatformBrowser","document","removeEventListener","onClick","activateOnFocus","openedByFocus","toggleClick","onFocus","addEventListener","bind","onBlur","relatedTarget","toggle","checkIfInClosableZone","target","decorators","type","Host","Inject","PLATFORM_ID","HostListener","FlyoutCloseDirective","Directives","Services","FlyoutModule","NgModule","imports","CommonModule","declarations","exports","providers","FlyoutButtonComponent","tiny","small","auto","large","FlyoutButtonSize","handleFlyoutChanged","flyoutOpen","Component","template","Components","FlyoutButtonModule"],"mappings":"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","sourcesContent":["import { Directive, ElementRef, Input, HostBinding } from '@angular/core';\n\n@Directive({\n\tselector: '[auiFlyoutZone]',\n\texportAs: 'auiFlyoutZone',\n})\nexport class FlyoutZoneDirective {\n\n\t@HostBinding('class.m-flyout__content') class = true;\n\n\t@Input() public auiFlyoutZone: boolean;\n\n\tpublic element: HTMLElement;\n\n\tconstructor(private elementRef: ElementRef) {\n\t\tthis.element = this.elementRef.nativeElement;\n\t}\n\n\tpublic contains(element: HTMLElement) {\n\t\tif (this.auiFlyoutZone === false) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.element.contains(element);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\nimport { FlyoutState } from '../types/flyout.types';\n\n@Injectable()\nexport class FlyoutService {\n\t// Observable string sources\n\tpublic subject = new Subject<FlyoutState>();\n\n\tpublic close() {\n\t\tthis.subject.next({\n\t\t\tclose: true,\n\t\t});\n\t}\n}\n","export enum FlyoutSize {\n\tAuto = 'auto',\n\tSmall = 'small',\n\tMedium = 'medium',\n\tLarge = 'large',\n\tFull = 'full',\n}\n\nexport interface FlyoutState {\n\tclose: boolean;\n}\n","import {\n\tDirective,\n\tElementRef,\n\tContentChild,\n\tOutput,\n\tEventEmitter,\n\tInput,\n\tHostBinding,\n\tOnDestroy,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { FlyoutZoneDirective } from './flyout-zone.directive';\nimport { FlyoutService } from '../services/flyout.service';\nimport { FlyoutSize } from '../types/flyout.types';\n\n\n@Directive({\n\tselector: '[auiFlyout]',\n\texportAs: 'auiFlyout',\n})\nexport class FlyoutDirective implements OnDestroy {\n\t@HostBinding('class.m-flyout') flyoutClass = true;\n\t@HostBinding('class.m-flyout--right') get flyoutAlignRight() {\n\t\treturn this.align === 'right';\n\t}\n\t@HostBinding('class.m-flyout--sm') get flyoutSmall() {\n\t\treturn this.size === 'small';\n\t}\n\t@HostBinding('class.m-flyout--md') get flyoutMedium() {\n\t\treturn this.size === 'medium';\n\t}\n\t@HostBinding('class.m-flyout--lg') get flyoutLarge() {\n\t\treturn this.size === 'large';\n\t}\n\t@HostBinding('class.m-flyout--full') get flyoutFull() {\n\t\treturn this.size === 'full';\n\t}\n\t@HostBinding('class.is-open') get flyoutOpen() {\n\t\treturn this.flyoutOpened;\n\t}\n\n\t@Input() public class = '';\n\t@Input() public size: FlyoutSize = FlyoutSize.Auto;\n\t@Input() public align: string;\n\t@Input() public toggleClick = true;\n\t@Input() public activateOnFocus = false;\n\t@Output() public opened = new EventEmitter();\n\t@Output() public closed = new EventEmitter();\n\n\t@ContentChild(FlyoutZoneDirective) public flyoutZone: FlyoutZoneDirective;\n\n\tprivate element: HTMLElement;\n\tprivate flyoutOpened = false;\n\n\tprivate destroyed$: Subject<boolean> = new Subject<boolean>();\n\n\tconstructor(private elementRef: ElementRef, private flyoutService: FlyoutService) {\n\t\tthis.element = this.elementRef.nativeElement;\n\n\t\tthis.flyoutService.subject\n\t\t\t.pipe(takeUntil(this.destroyed$))\n\t\t\t.subscribe((res) => {\n\t\t\t\tthis.close();\n\t\t\t});\n\t}\n\n\tpublic ngOnDestroy() {\n\t\tthis.destroyed$.next(true);\n\t}\n\n\tpublic open(): void {\n\t\tif (!this.flyoutOpened) {\n\t\t\tthis.flyoutOpened = true;\n\t\t\tthis.opened.emit(undefined);\n\t\t}\n\t}\n\n\tpublic close(): void {\n\t\tif (this.flyoutOpened) {\n\t\t\tthis.flyoutOpened = false;\n\t\t\tthis.closed.emit(undefined);\n\t\t}\n\t}\n\n\tpublic isInClosableZone(element: HTMLElement): boolean {\n\t\tif (!this.flyoutZone) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.flyoutZone.contains(element);\n\t}\n\n\tpublic isOpened(): boolean {\n\t\treturn this.flyoutOpened;\n\t}\n}\n","import { Directive, ElementRef, OnDestroy, Host, HostListener, HostBinding, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { FlyoutDirective } from './flyout.directive';\n\n\n@Directive({\n\tselector: '[auiFlyoutAction]',\n\texportAs: 'auiFlyoutAction',\n})\nexport class FlyoutActionDirective implements OnDestroy {\n\n\t@HostBinding('class.aui-flyout-action') class = true;\n\n\t/**\n     * This property is needed for dropdown not to open and instantly closed\n     * because the click event will be fired after the focus event so the click event will close the flyout\n     */\n\tprivate openedByFocus = false;\n\tprivate closeDropdownOnOutsideClick: (event: MouseEvent) => void;\n\n\tconstructor(\n\t\t@Host() public flyout: FlyoutDirective,\n\t\t@Inject(PLATFORM_ID) private platformId: Object,\n\t\tprivate elementRef: ElementRef\n\t) {\n\t\t// Define this method in the constructor so \"this\" points to \"this class\"\n\t\tthis.closeDropdownOnOutsideClick = (event: Event) => {\n\t\t\tthis.closeIfInClosableZone(event);\n\t\t};\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.isPlatformBrowser()) {\n\t\t\tdocument.removeEventListener('click', this.closeDropdownOnOutsideClick, true);\n\t\t}\n\t}\n\n\t@HostListener('click')\n\tonClick() {\n\t\tif (this.flyout.activateOnFocus && this.openedByFocus) {\n\t\t\tthis.openedByFocus = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.flyout.isOpened() && this.flyout.toggleClick) {\n\t\t\tthis.close();\n\t\t} else {\n\t\t\tthis.open();\n\t\t}\n\t}\n\n\t@HostListener('focus')\n\tonFocus() {\n\t\tif (!this.isPlatformBrowser()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.flyout.isOpened()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.openedByFocus = true;\n\t\tthis.flyout.open();\n\n\t\tdocument.addEventListener('click', this.closeDropdownOnOutsideClick.bind(this), true);\n\t}\n\n\t@HostListener('blur', ['$event'])\n\tonBlur(event: FocusEvent) {\n\t\tif (!this.isPlatformBrowser()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (event.relatedTarget && !this.flyout.isInClosableZone(<HTMLElement> event.relatedTarget)\n\t\t\t&& event.relatedTarget !== this.elementRef.nativeElement) {\n\t\t\tthis.flyout.close();\n\t\t\tdocument.removeEventListener('click', this.closeDropdownOnOutsideClick, true);\n\t\t}\n\t}\n\n\tpublic toggle() {\n\t\tif (this.flyout.isOpened()) {\n\t\t\tthis.close();\n\t\t} else {\n\t\t\tthis.open();\n\t\t}\n\t}\n\n\tpublic open() {\n\t\tif (!this.isPlatformBrowser()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.flyout.isOpened()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.flyout.open();\n\t\tdocument.addEventListener('click', this.closeDropdownOnOutsideClick, true);\n\t}\n\n\tpublic close() {\n\t\tif (!this.isPlatformBrowser()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.flyout.isOpened()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.flyout.close();\n\t\tdocument.removeEventListener('click', this.closeDropdownOnOutsideClick, true);\n\t}\n\n\tprivate checkIfInClosableZone(event) {\n\t\treturn !this.flyout.isInClosableZone(<HTMLElement> event.target)\n\t\t\t\t&& event.target !== this.elementRef.nativeElement\n\t\t\t\t&& !this.elementRef.nativeElement.contains(event.target);\n\t}\n\n\tprivate closeIfInClosableZone(event: Event): void {\n\t\tif (!this.isPlatformBrowser()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.checkIfInClosableZone(event)) {\n\t\t\tthis.flyout.close();\n\t\t\tdocument.removeEventListener('click', this.closeDropdownOnOutsideClick, true);\n\t\t}\n\t}\n\n\tprivate isPlatformBrowser(): boolean {\n\t\treturn isPlatformBrowser(this.platformId);\n\t}\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { FlyoutService } from '../services/flyout.service';\n\n@Directive({\n\tselector: '[auiFlyoutClose]',\n\texportAs: 'auiFlyoutClose',\n})\nexport class FlyoutCloseDirective {\n\n\tconstructor(private flyoutService: FlyoutService) {}\n\n\t@HostListener('click')\n\tpublic onClick() {\n\t\tthis.flyoutService.close();\n\t}\n}\n","import { FlyoutActionDirective } from './flyout-action.directive';\nimport { FlyoutCloseDirective } from './flyout-close.directive';\nimport { FlyoutZoneDirective } from './flyout-zone.directive';\nimport { FlyoutDirective } from './flyout.directive';\n\nexport const Directives = [\n\tFlyoutActionDirective,\n\tFlyoutCloseDirective,\n\tFlyoutZoneDirective,\n\tFlyoutDirective,\n];\n","import { FlyoutService } from './flyout.service';\n\nexport const Services = [\n\tFlyoutService,\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Directives } from './directives/index';\nimport { Services } from './services/index';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t],\n\tdeclarations: [\n\t\tDirectives,\n\t],\n\texports: [\n\t\tDirectives,\n\t],\n\tproviders: [\n\t\tServices,\n\t],\n})\nexport class FlyoutModule {}\n","export enum FlyoutButtonSize {\n\tAuto = 'auto',\n\tTiny = 'tiny',\n\tSmall = 'small',\n\tLarge = 'large',\n}\n","import { Component, Input } from '@angular/core';\n\nimport { FlyoutButtonSize } from '../../types/flyout-button.types';\n\n@Component({\n\tselector: 'aui-flyout-button',\n\ttemplate: `<div auiFlyout [align]=\"align\" [size]=\"flyoutSize\" (opened)=\"handleFlyoutChanged(true)\" (closed)=\"handleFlyoutChanged(false)\">\n    <button auiFlyoutAction title=\"{{ title }}\" [ngClass]=\"[buttonClassNames[buttonSize], (icon && label) ? 'has-icon-left' : '', (icon && !label) ? 'has-icon' : '', outline ? 'a-button-outline' : 'a-button']\">\n        <span class=\"{{ icon }}\"></span>\n        {{ label }}\n    </button>\n    <div auiFlyoutZone>\n        <ng-container *ngIf=\"flyoutOpen\">\n            <ng-content></ng-content>\n        </ng-container>\n    </div>\n</div>\n`,\n})\nexport class FlyoutButtonComponent {\n\tpublic buttonClassNames = {\n\t\ttiny: 'a-button--tiny',\n\t\tsmall: 'a-button--small',\n\t\tauto: '',\n\t\tlarge: 'a-button--large',\n\t};\n\n\t@Input() title: string;\n\t@Input() label: string;\n\t@Input() icon: string;\n\t@Input() align: string;\n\t@Input() buttonSize: FlyoutButtonSize = FlyoutButtonSize.Auto;\n\t@Input() flyoutSize: string;\n\t@Input() outline = false;\n\n\tpublic flyoutOpen = false;\n\n\tpublic handleFlyoutChanged(open: boolean): void {\n\t\tthis.flyoutOpen = open;\n\t}\n}\n","import { FlyoutButtonComponent } from './flyout-button/flyout-button.component';\n\nexport const Components = [\n\tFlyoutButtonComponent,\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FlyoutModule } from '../flyout/flyout.module';\n\nimport { Components } from './components/index';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFlyoutModule,\n\t],\n\tdeclarations: [\n\t\tComponents,\n\t],\n\texports: [\n\t\tComponents,\n\t],\n})\nexport class FlyoutButtonModule {\n}\n"]}