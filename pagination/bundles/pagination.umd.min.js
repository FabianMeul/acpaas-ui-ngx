!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@angular/forms"),require("@acpaas-ui/ngx-components/utils")):"function"==typeof define&&define.amd?define("pagination",["exports","@angular/core","@angular/common","@angular/forms","@acpaas-ui/ngx-components/utils"],t):t(e.pagination={},e.ng.core,e.ng.common,e.ng.forms,null)}(this,function(e,a,i,t,r){"use strict";var n=function(){function e(){this.ariaNavigationLabel="Paginering",this.ariaPreviousLabel="Ga naar de vorige pagina",this.ariaNextLabel="Ga naar de volgende pagina",this.display="basic",this.styling="outlined",this.update=new a.EventEmitter,this.totalPages=0,this.numbers=[],this.instanceId=Math.random().toString(36).substr(2,9)}return e.prototype.ngOnChanges=function(){this.setValues()},e.prototype.next=function(){return this.currentPage<this.totalPages&&this.onUpdate(this.currentPage+1),!1},e.prototype.prev=function(){return 1<this.currentPage&&this.onUpdate(this.currentPage-1),!1},e.prototype.onUpdate=function(e){return this.update.emit(parseInt(e,10)),!1},e.prototype.setValues=function(){if(this.totalValues&&this.itemsPerPage){this.totalPages=Math.ceil(this.totalValues/this.itemsPerPage);var e=Array(this.totalPages).fill("").map(function(e,t){return String(t+1)});if(e.length<8)return this.numbers=e;this.currentPage<5?this.numbers=e.slice(0,5):this.currentPage>this.totalPages-4?this.numbers=e.slice(this.totalPages-5):this.numbers=e.slice(this.currentPage-2,this.currentPage+1),-1===this.numbers.indexOf("1")&&this.numbers.unshift("1"),-1===this.numbers.indexOf(String(this.totalPages))&&this.numbers.push(String(this.totalPages)),-1===this.numbers.indexOf("2")&&this.numbers.splice(1,0,"..."),-1===this.numbers.indexOf(String(this.totalPages-1))&&this.numbers.splice(this.numbers.length-1,0,"...")}},e.decorators=[{type:a.Component,args:[{selector:"aui-pagination",template:'<nav *ngIf="totalPages > 1" role="navigation" [attr.aria-label]= ariaNavigationLabel>\n    \x3c!-- Basic --\x3e\n    <ul class="m-pagination" [ngClass]="{\'m-pagination--outline\': styling === \'outlined\' }" *ngIf="display === \'basic\'">\n        <li class="m-pagination__prev">\n            <a [ngClass]="{\'is-disabled\': currentPage <= 1 }" [attr.href]="currentPage > 1 ? \'#\' : null" id="pagination-{{ instanceId }}-prev-page" (click)="prev()" [attr.aria-label]= ariaPreviousLabel>\n                <i aria-hidden="true" class="fa fa-angle-left"></i>\n                <span class="u-screen-reader-only">Previous</span>\n            </a>\n        </li>\n        <li class="m-pagination__next">\n            <a [ngClass]="{\'is-disabled\': currentPage >= totalPages }" [attr.href]="currentPage < totalPages ? \'#\' : null" id="pagination-{{ instanceId }}-next-page" (click)="next()" [attr.aria-label]= ariaNextLabel>\n                <i aria-hidden="true" class="fa fa-angle-right"></i>\n                <span class="u-screen-reader-only">Next</span>\n            </a>\n        </li>\n    </ul>\n\n    \x3c!-- Text --\x3e\n    <ul class="m-pagination" [ngClass]="{\'m-pagination--outline\': styling === \'outlined\' }" *ngIf="display === \'text\'">\n        <li class="m-pagination__prev">\n            <a [ngClass]="{\'is-disabled\': currentPage <= 1 }" [attr.href]="currentPage > 1 ? \'#\' : null" id="pagination-{{ instanceId }}-prev-page" (click)="prev()" [attr.aria-label]= ariaPreviousLabel>\n                <i aria-hidden="true" class="fa fa-angle-left"></i>\n                <span class="u-screen-reader-only">Previous</span>\n            </a>\n        </li>\n        <li class="m-pagination__label">{{ currentPage }} - {{ totalPages }}</li>\n        <li class="m-pagination__next">\n            <a [ngClass]="{\'is-disabled\': currentPage >= totalPages }" [attr.href]="currentPage < totalPages ? \'#\' : null" id="pagination-{{ instanceId }}-next-page" (click)="next()" [attr.aria-label]= ariaNextLabel>\n                <i aria-hidden="true" class="fa fa-angle-right"></i>\n                <span class="u-screen-reader-only">Next</span>\n            </a>\n        </li>\n    </ul>\n\n    \x3c!-- Numbers --\x3e\n    <ul class="m-pagination" [ngClass]="{\'m-pagination--outline\': styling === \'outlined\' }" *ngIf="display === \'numbers\'">\n        <li class="m-pagination__prev">\n            <a [ngClass]="{\'is-disabled\': currentPage <= 1 }" [attr.href]="currentPage > 1 ? \'#\' : null" id="pagination-{{ instanceId }}-prev-page" (click)="prev()" [attr.aria-label]= ariaPreviousLabel>\n                <i aria-hidden="true" class="fa fa-angle-left"></i>\n                <span class="u-screen-reader-only">Previous</span>\n            </a>\n        </li>\n        <li *ngFor="let number of numbers; let i = index">\n            <a [ngClass]="{\'is-active\': number === currentPage + \'\' }" href="#" id="pagination-{{ instanceId }}-button-{{ i }}" (click)="onUpdate(number)" [attr.aria-label]="\'Pagina \' + number" [attr.aria-current]="number === currentPage + \'\' ? \'page\' : null">{{ number }}</a>\n        </li>\n        <li class="m-pagination__next">\n            <a [ngClass]="{\'is-disabled\': currentPage >= totalPages }" [attr.href]="currentPage < totalPages ? \'#\' : null" id="pagination-{{ instanceId }}-next-page" (click)="next()" [attr.aria-label]= ariaNextLabel>\n                <i aria-hidden="true" class="fa fa-angle-right"></i>\n                <span class="u-screen-reader-only">Next</span>\n            </a>\n        </li>\n    </ul>\n</nav>\n'}]}],e.propDecorators={ariaNavigationLabel:[{type:a.Input}],ariaPreviousLabel:[{type:a.Input}],ariaNextLabel:[{type:a.Input}],currentPage:[{type:a.Input}],display:[{type:a.Input}],itemsPerPage:[{type:a.Input}],styling:[{type:a.Input}],totalValues:[{type:a.Input}],update:[{type:a.Output}]},e}(),s=new a.InjectionToken("paginationLabels"),o={PAGINATION_LABEL:"%{currentPage} of %{total}"};function l(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var a,i,r=n.call(e),s=[];try{for(;(void 0===t||0<t--)&&!(a=r.next()).done;)s.push(a.value)}catch(o){i={error:o}}finally{try{a&&!a.done&&(n=r["return"])&&n.call(r)}finally{if(i)throw i.error}}return s}function u(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(l(arguments[t]));return e}var p=[n],c=o,g=function(){function t(){}return t.forChild=function(e){return{ngModule:t,providers:[{provide:s,useValue:e}]}},t.decorators=[{type:a.NgModule,args:[{imports:[i.CommonModule],declarations:u(p),exports:u(p),providers:[{provide:s,useValue:c}]}]}],t}(),d=new a.InjectionToken("itemCounterLabels"),m=new a.InjectionToken("itemsPerPageLabels"),h=function(){function e(e){this.setClass=!0,this.currentFrom=1,this.currentTo=this.amountPerPage,e&&!this.label?this.label=e:this.label||(this.label={singular:"%{currentFrom} - %{currentTo} of %{totalAmount} item",plural:"%{currentFrom} - %{currentTo} of %{totalAmount} items"})}return e.prototype.setFromTo=function(){this.currentFrom=this.amountPerPage*(this.currentPage-1)+1,this.currentTo=this.amountPerPage*this.currentPage<=this.totalAmount?this.amountPerPage*this.currentPage:this.totalAmount},e.prototype.ngOnInit=function(){this.setFromTo()},e.prototype.ngOnChanges=function(){this.setFromTo()},e.decorators=[{type:a.Component,args:[{selector:"aui-item-counter",template:'<div class="m-item-counter">\n    {{ label }}\n</div>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,styles:[":host{display:inline-block;vertical-align:top}.m-item-counter{line-height:3rem}"]}]}],e.ctorParameters=function(){return[{type:undefined,decorators:[{type:a.Inject,args:[d]}]}]},e.propDecorators={setClass:[{type:a.HostBinding,args:["class.aui-item-counter"]}],currentPage:[{type:a.Input}],totalAmount:[{type:a.Input}],amountPerPage:[{type:a.Input}],label:[{type:a.Input}]},e}(),f="R",P=function(){function e(e){this.inputSizes={S:"a-input--small",R:"",L:"a-input--large"},this.setClass=!0,this.size=f,this.returnAmount=new a.EventEmitter,e&&!this.label?this.label=e:this.label||(this.label={singular:"item per page",plural:"items per page"})}return e.prototype.setAmount=function(e){this.amountPerPage=e,this.returnAmount.emit(this.amountPerPage)},e.decorators=[{type:a.Component,args:[{selector:"aui-items-per-page",template:'<div class="m-items-per-page">\n    <div class="a-input has-icon-right" [ngClass]="[inputSizes[size]]">\n        <div class="a-input__wrapper">\n            <select name="input-selected" id="input-select" [ngModel]="amountPerPage" (ngModelChange)="setAmount($event)">\n                <option *ngFor="let amountOption of selectOptions" [value]="amountOption">{{ amountOption }}</option>\n            </select>\n            <span class="fa fa-angle-down"></span>\n        </div>\n\n        <label class="a-input__label" for="input-text">{{ label }}</label>\n    </div>\n</div>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,styles:[":host{display:inline-block;vertical-align:top}.m-items-per-page .a-input .a-input__wrapper{display:inline-block;margin-right:.5rem}"]}]}],e.ctorParameters=function(){return[{type:undefined,decorators:[{type:a.Inject,args:[m]}]}]},e.propDecorators={setClass:[{type:a.HostBinding,args:["class.aui-items-per-page"]}],label:[{type:a.Input}],size:[{type:a.Input}],selectOptions:[{type:a.Input}],amountPerPage:[{type:a.Input}],returnAmount:[{type:a.Output}]},e}(),b=[h,P],y=undefined,v=undefined,I=function(){function n(){}return n.forChild=function(e,t){return{ngModule:n,providers:[{provide:d,useValue:e},{provide:m,useValue:t}]}},n.decorators=[{type:a.NgModule,args:[{imports:[i.CommonModule,t.FormsModule,r.LabelsModule],declarations:u(b),exports:u(b),providers:[{provide:d,useValue:y},{provide:m,useValue:v}]}]}],n}();e.PaginationComponent=n,e.PAGINATION_LABELS=s,e.PAGINATION_LABELS_DEFAULT=o,e.PaginationModule=g,e.ItemCounterComponent=h,e.ItemsPerPageComponent=P,e.ITEM_COUNTER_LABEL=d,e.ITEMS_PER_PAGE_LABEL=m,e.ItemCounterModule=I,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=pagination.umd.min.js.map