{"version":3,"file":"table.umd.js.map","sources":["ng://table/lib/table/services/table-helper.service.ts","ng://table/lib/table/components/column-selector/column-selector.component.ts","ng://table/lib/table/components/table.messages.ts","ng://table/lib/table/components/table/table.component.ts","ng://table/lib/table/components/table-bar/table-bar.component.ts","ng://table/lib/table/components/table-cell/table-cell.component.ts","ng://table/lib/table/components/table-header/table-header.component.ts","ng://table/lib/table/components/index.ts","ng://table/lib/table/directives/table-bar-item/table-bar-item.directive.ts","ng://table/lib/table/directives/table-bar-search/table-bar-search.directive.ts","ng://table/lib/table/directives/index.ts","ng://table/lib/table/table.module.ts","ng://table/lib/table/classes/table.class.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { TableColumn } from '../types/table.types';\n\n@Injectable()\nexport class TableHelperService {\n\tpublic getLabel(key: (TableColumn|string)): string {\n\t\treturn key.hasOwnProperty('label') ? (key as TableColumn).label : key as string;\n\t}\n\n\tpublic getValue(key: (TableColumn|string)): string {\n\t\treturn key.hasOwnProperty('value') ? (key as TableColumn).value : key as string;\n\t}\n\n\tpublic getClass(key: (TableColumn|string)): string {\n\t\treturn key.hasOwnProperty('classList') ? (key as TableColumn).classList.join(' ') : key as string;\n\t}\n\n\tpublic formatValue(item, key, index): any {\n\t\tconst value = item[this.getValue(key)];\n\t\treturn key.format ? key.format(value, key, item, index) : value;\n\t}\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { TableHelperService } from '../../services/table-helper.service';\n\n/** Used to generate unique ID's for each column selector component (idea from Angular Material --> tab-group component) */\nlet nextId = 0;\n\n@Component({\n\tselector: 'aui-column-selector',\n\ttemplate: `<ul class=\"a-list a-list--lined aui-column-selector\">\n\t<li *ngFor=\"let column of columns; let i = index; let isLast = last; let isFirst = first;\" class=\"animated\" [ngClass]=\"{show: i === currentTarget}\">\n\t\t<div class=\"a-input__checkbox a-input__checkbox--small\">\n\t\t\t<input type=\"checkbox\" id=\"checkbox-{{ id }}-{{ i }}-{{ tableHelper.getValue(column) }}\" name=\"checkbox-{{ tableHelper.getValue(column) }}\" [checked]=\"!column.hidden\" (change)=\"updateDisplay($event, i)\" [disabled]=\"column.disabled\">\n\t\t\t<label for=\"checkbox-{{ id }}-{{ i }}-{{ tableHelper.getValue(column) }}\">{{ tableHelper.getLabel(column) }}</label>\n\t\t</div>\n\t\t<div class=\"select-actions\">\n\t\t\t<button [disabled]=\"isFirst\" class=\"a-button-transparent a-button--tiny has-icon\" (click)=\"move(column, -1)\">\n\t\t\t\t<span class=\"fa fa-angle-up\"></span>\n\t\t\t</button>\n\t\t\t<button [disabled]=\"isLast\" class=\"a-button-transparent a-button--tiny has-icon\" (click)=\"move(column, 1)\">\n\t\t\t\t<span class=\"fa fa-angle-down\"></span>\n\t\t\t</button>\n\t\t</div>\n\t</li>\n<ul>\n`,\n})\nexport class ColumnSelectorComponent {\n\t@Input() columns;\n\t@Output() update = new EventEmitter();\n\tpublic id: number;\n\tpublic currentTarget;\n\n\tconstructor(public tableHelper: TableHelperService) {\n\t\tthis.id = nextId++;\n\t}\n\n\tpublic updateDisplay(e, index) {\n\t\tif (e.target.checked) {\n\t\t\tthis.columns[index].hidden = false;\n\t\t\tthis.enableChildren(this.columns[index]);\n\t\t} else {\n\t\t\tthis.columns[index].hidden = true;\n\t\t\tthis.disableChildren(this.columns[index]);\n\t\t}\n\n\t\tthis.emitColumns();\n\t}\n\n\tpublic enableChildren(parent) {\n\t\tthis.columns = this.columns.map((o) => {\n\t\t\tif (o.parent && o.disabled && o.parent.indexOf(parent.value) !== -1) {\n\t\t\t\to.disabled = false;\n\t\t\t\tthis.enableChildren(o);\n\t\t\t}\n\n\t\t\treturn o;\n\t\t});\n\t}\n\n\tpublic disableChildren(parent) {\n\t\tthis.columns = this.columns.map((o) => {\n\t\t\tif (o.parent && !o.disabled && o.parent.indexOf(parent.value) !== -1) {\n\t\t\t\to.disabled = true;\n\t\t\t\to.hidden = true;\n\t\t\t\tthis.disableChildren(o);\n\t\t\t}\n\n\t\t\treturn o;\n\t\t});\n\t}\n\n\tpublic move(key, i) {\n\t\tconst index = this.columns.findIndex((o) => {\n\t\t\treturn this.tableHelper.getValue(o) === this.tableHelper.getValue(key);\n\t\t});\n\t\tconst target = index + i;\n\n\t\tif (target < 0 || target > this.columns.length - 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.columns.splice(index, 1); // Delete previous key position\n\t\tthis.columns.splice(target, 0 , key); // Add new position\n\n\t\t// Use timeout to fix re-rendering issue\n\t\tsetTimeout(() => {\n\t\t\tthis.currentTarget = target;\n\t\t});\n\n\t\tthis.emitColumns();\n\t}\n\n\tpublic emitColumns() {\n\t\tthis.update.emit(this.columns);\n\t}\n}\n","export const LOAD_DATA = 'Loading data...';\nexport const NO_DATA = 'No data available.';\nexport const NO_COLUMNS = 'No columns available.';\n","import { Component, Input, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { TableHelperService } from '../../services/table-helper.service';\nimport { TableColumn, OrderBy } from '../../types/table.types';\nimport * as DEFAULT_MESSAGES from '../table.messages';\n\n@Component({\n\tselector: 'aui-table',\n\ttemplate: `<div [ngClass]=\"{'a-table__wrapper-responsive': responsive}\">\n\t<table class=\"a-table a-table--striped aui-table\">\n\t\t<thead *ngIf=\"columns.length > 0\">\n\t\t\t<tr>\n\t\t\t\t<th *ngFor=\"let column of columns\" [ngClass]=\"tableHelper.getClass(column)\">\n\t\t\t\t\t<ng-container *ngIf=\"column.headerComponent\">\n\t\t\t\t\t\t<aui-table-header [label]=\"tableHelper.getLabel(column)\" [value]=\"tableHelper.getValue(column)\" [component]=\"column.headerComponent\"></aui-table-header>\n\t\t\t\t\t</ng-container>\n\t\t\t\t\t<ng-container *ngIf=\"!column.headerComponent\">\n\t\t\t\t\t\t<ng-container *ngIf=\"activeSorting\">\n\t\t\t\t\t\t\t<button *ngIf=\"!column.disableSorting && tableHelper.getValue(column) !== activeSorting?.key\" class=\"a-button a-button--tiny a-button--transparent has-icon-right\" (click)=\"sort(column, 'asc')\">\n\t\t\t\t\t\t\t\t{{ tableHelper.getLabel(column) }} <span class=\"fa fa-sort\"></span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button *ngIf=\"!column.disableSorting && tableHelper.getValue(column) === activeSorting?.key && activeSorting?.order === 'desc'\" class=\" a-button a-button--tiny a-button--transparent has-icon-right\" (click)=\"sort(column, 'asc')\">\n\t\t\t\t\t\t\t\t{{ tableHelper.getLabel(column) }} <span class=\"fa fa-sort-desc\"></span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button *ngIf=\"!column.disableSorting && tableHelper.getValue(column) === activeSorting?.key && activeSorting?.order === 'asc'\" class=\" a-button a-button--tiny a-button--transparent has-icon-right\" (click)=\"sort(column, 'desc')\">\n\t\t\t\t\t\t\t\t{{ tableHelper.getLabel(column) }} <span class=\"fa fa-sort-asc\"></span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<ng-container *ngIf=\"column.disableSorting\">\n\t\t\t\t\t\t\t\t{{ tableHelper.getLabel(column) }}\n\t\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t\t<ng-container *ngIf=\"!activeSorting\">\n\t\t\t\t\t\t\t{{ tableHelper.getLabel(column) }}\n\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t</ng-container>\n\t\t\t\t</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<tr *ngIf=\"loading\">\n\t\t\t\t<td [colSpan]=\"columns.length\">\n\t\t\t\t\t<div class=\"table-loading\">\n\t\t\t\t\t\t{{ loadDataMessage }} <span class=\"a-spinner\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr *ngIf=\"!loading && columns.length === 0\">\n\t\t\t\t<td>{{ noColumnsMessage }}</td>\n\t\t\t</tr>\n\t\t\t<tr *ngIf=\"!loading && (!rows || rows.length === 0)\">\n\t\t\t\t<td [colSpan]=\"columns.length\">{{ noDataMessage }}</td>\n\t\t\t</tr>\n\t\t\t<ng-container *ngIf=\"!loading && columns.length > 0\">\n\t\t\t\t<tr *ngFor=\"let row of rows; let rowIndex = index\" (click)=\"clickRow(row)\" [ngClass]=\"{'a-table--clickable': hasClickAction}\">\n\t\t\t\t\t<td *ngFor=\"let column of columns\" [ngClass]=\"tableHelper.getClass(column)\">\n\t\t\t\t\t\t<aui-table-cell [value]=\"tableHelper.formatValue(row, column, rowIndex)\" [component]=\"column.component\"></aui-table-cell>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</ng-container>\n\t\t</tbody>\n\t</table>\n</div>\n`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\n})\nexport class TableComponent {\n\t@Input() rows: any[] = [];\n\t@Input() columns: (TableColumn|string)[] = [];\n\t@Input() loading = false;\n\t@Input() responsive = true;\n\t@Input() hasClickAction = false;\n\t@Input() activeSorting: OrderBy; // Just a property to use in the template, not functional\n\t@Input() noDataMessage = DEFAULT_MESSAGES.NO_DATA;\n\t@Input() loadDataMessage = DEFAULT_MESSAGES.LOAD_DATA;\n\t@Input() noColumnsMessage = DEFAULT_MESSAGES.NO_COLUMNS;\n\n\t@Output() orderBy: EventEmitter<any> = new EventEmitter();\n\t@Output() rowClicked: EventEmitter<any> = new EventEmitter();\n\n\tconstructor(\n\t\tpublic tableHelper: TableHelperService\n\t) {}\n\n\tpublic sort(key, order): void {\n\t\tconst prop = this.tableHelper.getValue(key);\n\t\tthis.activeSorting = {key: prop, order};\n\t\tthis.orderBy.emit({key: prop, order});\n\t}\n\n\tpublic clickRow(rowData: any): void {\n\t\tif (this.hasClickAction) {\n\t\t\tthis.rowClicked.emit(rowData);\n\t\t}\n\t}\n}\n","import { Component, Input, Output, EventEmitter, HostBinding, ViewChild, DoCheck } from '@angular/core';\nimport { Filter } from '@acpaas-ui/ngx-components/utils';\n\n@Component({\n\tselector: 'aui-table-bar',\n\ttemplate: `<div class=\"aui-table-bar\">\n\t<div class=\"filters\" #ref [ngClass]=\"{open: open}\">\n\t\t<ng-content select=\"[auiTableBarItem]\"></ng-content>\n\t\t<div class=\"aui-table-bar-item\" *ngIf=\"open\">\n\t\t\t<button class=\"a-button a-button--transparent\" (click)=\"toggle()\">Show less...</button>\n\t\t</div>\n\t</div>\n\t<div class=\"show-more\" *ngIf=\"!open && invisibleItems\">\n\t\t<button class=\"a-button a-button--transparent\" (click)=\"toggle()\">Show more...</button>\n\t</div>\n\n\t<ng-content select=\"[auiTableBarSearch]\"></ng-content>\n</div>\n`,\n})\nexport class TableBarComponent implements DoCheck {\n\t@Input() filters: Filter[] = [];\n\t@Input() testFilter: Filter;\n\t@Output() filter = new EventEmitter();\n\tpublic open = false;\n\tpublic invisibleItems = false;\n\n\t@ViewChild('ref') ref;\n\n\tpublic ngDoCheck() {\n\t\tthis.countInvisibleItems();\n\t}\n\n\tpublic isInVisible(rectContainer, rectChild) {\n\t\treturn rectContainer.bottom < rectChild.top;\n\t}\n\n\tpublic countInvisibleItems() {\n\t\tconst rectContainer = this.ref.nativeElement.getBoundingClientRect();\n\t\tconst childNodes = this.ref.nativeElement.childNodes;\n\n\t\tfor (let i = childNodes.length - 1; i >= 0; i--) {\n\t\t\tconst o = childNodes[i];\n\t\t\tif (o.nodeName === 'AUI-TABLE-BAR-ITEM' && o.getBoundingClientRect) {\n\t\t\t\tconst rectChild = o.getBoundingClientRect();\n\t\t\t\tif (this.isInVisible(rectContainer, rectChild)) {\n\t\t\t\t\tthis.invisibleItems = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i === 0) {\n\t\t\t\tthis.invisibleItems = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic toggle() {\n\t\tthis.open = !this.open;\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tComponentFactoryResolver,\n\tOnChanges,\n\tType,\n\tViewContainerRef,\n\tChangeDetectorRef\n} from '@angular/core';\nimport { Cell } from '../../types/table.types';\n\n@Component({\n\tselector: 'aui-table-cell',\n\ttemplate: `<ng-template *ngIf=\"hasComponent()\"></ng-template>\n<span *ngIf=\"!hasComponent()\">{{ value }}</span>\n`,\n})\nexport class TableCellComponent implements OnChanges {\n\t@Input() component: Type<any>;\n\t@Input() value: string;\n\n\tconstructor(\n\t\tpublic viewContainerRef: ViewContainerRef,\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\n\t\tprivate changeDetectionRef: ChangeDetectorRef\n\t) { }\n\n\tpublic ngOnChanges() {\n\t\tif (this.component) {\n\t\t\tthis.loadComponent();\n\t\t}\n\t}\n\n\tpublic hasComponent() {\n\t\treturn !!this.component;\n\t}\n\n\tpublic loadComponent() {\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.component);\n\t\tconst viewContainerRef = this.viewContainerRef;\n\t\tviewContainerRef.clear();\n\n\t\tconst componentRef = viewContainerRef.createComponent(componentFactory);\n\t\t(<Cell>componentRef.instance).data = this.value;\n\t\tthis.changeDetectionRef.detectChanges();\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tComponentFactoryResolver,\n\tOnChanges,\n\tType,\n\tViewContainerRef,\n\tChangeDetectorRef\n} from '@angular/core';\nimport { Cell } from '../../types/table.types';\n\n@Component({\n\tselector: 'aui-table-header',\n\ttemplate: `<ng-template *ngIf=\"hasComponent()\"></ng-template>\n<span *ngIf=\"!hasComponent()\">{{ label }}</span>\n`,\n})\nexport class TableHeaderComponent implements OnChanges {\n\t@Input() component: Type<any>;\n\t@Input() label: string;\n\t@Input() value: any;\n\n\tconstructor(\n\t\tpublic viewContainerRef: ViewContainerRef,\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\n\t\tprivate changeDetectionRef: ChangeDetectorRef\n\t) { }\n\n\tpublic ngOnChanges() {\n\t\tif (this.component) {\n\t\t\tthis.loadComponent();\n\t\t}\n\t}\n\n\tpublic hasComponent() {\n\t\treturn !!this.component;\n\t}\n\n\tpublic loadComponent() {\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.component);\n\t\tconst viewContainerRef = this.viewContainerRef;\n\t\tviewContainerRef.clear();\n\n\t\tconst componentRef = viewContainerRef.createComponent(componentFactory);\n\t\t(<Cell>componentRef.instance).data = this.value;\n\t\tthis.changeDetectionRef.detectChanges();\n\t}\n}\n","import { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { TableComponent } from './table/table.component';\nimport { TableBarComponent } from './table-bar/table-bar.component';\nimport { TableCellComponent } from './table-cell/table-cell.component';\nimport { TableHeaderComponent } from './table-header/table-header.component';\n\nexport const Components = [\n\tColumnSelectorComponent,\n\tTableComponent,\n\tTableBarComponent,\n\tTableCellComponent,\n\tTableHeaderComponent,\n];\n","import { HostBinding, Directive } from '@angular/core';\n\n@Directive({\n\tselector: '[auiTableBarItem]',\n})\nexport class TableBarItemDirective {\n\t@HostBinding('class.aui-table-bar-item') setClass = true;\n}\n","import { HostBinding, Directive } from '@angular/core';\n\n@Directive({\n\tselector: '[auiTableBarSearch]',\n})\nexport class TableBarSearchDirective {\n\t@HostBinding('class.aui-table-bar-search') setClass = true;\n}\n","import { TableBarItemDirective } from './table-bar-item/table-bar-item.directive';\nimport { TableBarSearchDirective } from './table-bar-search/table-bar-search.directive';\n\nexport const Directives = [\n\tTableBarItemDirective,\n\tTableBarSearchDirective,\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { Components } from './components';\nimport { Directives } from './directives';\n\nimport { TableHelperService } from './services/table-helper.service';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t],\n\tproviders: [\n\t\tTableHelperService,\n\t],\n\tdeclarations: [\n\t\tComponents,\n\t\tDirectives,\n\t],\n\texports: [\n\t\tComponents,\n\t\tDirectives,\n\t],\n})\nexport class TableModule {}\n","import { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { Filter } from '@acpaas-ui/ngx-components/utils';\n\nimport { TableRecord, TableColumn, OrderBy } from '../types/table.types';\n\nexport class Table {\n\t// Original data (json array from the server)\n\tprivate rawData: TableRecord[] = [];\n\n\t// Original columns config (from the app)\n\tprivate rawColumns: (TableColumn|string)[];\n\n\t// Array of filters\n\tpublic filters: Filter[] = [];\n\n\t// Pagination\n\tpublic page;\n\tpublic limit;\n\tpublic lastPage;\n\n\t// Sorting\n\tpublic orderBy: OrderBy;\n\n\tpublic filteredData: BehaviorSubject<any[]> = new BehaviorSubject([]);\n\tpublic rows: BehaviorSubject<any[]> = new BehaviorSubject([]);\n\tpublic columns: BehaviorSubject<any[]> = new BehaviorSubject([]);\n\n\t// Init stuff...\n\tconstructor() {}\n\n\t// ---------- GETTERS | SETTERS ---------- //\n\n\tpublic setRawData(data: any[]) {\n\t\tthis.rawData = data;\n\t\tthis.updateFilteredData();\n\t\tthis.setLastPage();\n\t\tthis.updateRows();\n\t}\n\n\tpublic setRawColumns(columns) {\n\t\tthis.rawColumns = columns;\n\t\tthis.updateColumns();\n\t}\n\n\tpublic setFilters(filters: Filter[]) {\n\t\tthis.filters = filters;\n\t\tthis.updateFilteredData();\n\t\tthis.setLastPage();\n\t\tthis.updateRows();\n\t}\n\n\tpublic addFilter(filter: Filter) {\n\t\tthis.filters.push(filter);\n\t\tthis.updateFilteredData();\n\t\tthis.setLastPage();\n\t\tthis.updateRows();\n\t}\n\n\tpublic setPage(i) {\n\t\tthis.page = Number(i); // something weird number >< string\n\t\tthis.updateRows();\n\t}\n\n\tpublic setLimit(i: number) {\n\t\tthis.limit = Number(i); // something weird number >< string\n\t\tthis.setLastPage();\n\t\tif (this.lastPage && this.page > this.lastPage) {\n\t\t\tthis.page = this.lastPage;\n\t\t}\n\t\tthis.updateRows();\n\t}\n\n\tpublic setOrderBy(o) {\n\t\tthis.orderBy = o;\n\t\tthis.updateFilteredData();\n\t\tthis.setLastPage();\n\t\tthis.updateRows();\n\t}\n\n\t// ---------- VIRTUAL PROPS ---------- //\n\n\tpublic getOffset() {\n\t\treturn (this.page * this.limit) - this.limit;\n\t}\n\n\t// ---------- PROPERTY HELPERS ---------- //\n\n\tpublic setLastPage() {\n\t\tconst d = this.filteredData.getValue();\n\t\tthis.lastPage = Math.ceil(d ? d.length / this.limit : 0);\n\t}\n\n\tpublic updateRows() {\n\t\tlet d = this.filteredData.getValue();\n\n\t\tif (this.orderBy) {\n\t\t\td = this.sortData(d, this.orderBy.key, this.orderBy.order);\n\t\t}\n\n\t\td = this.selectData(d, this.limit, this.getOffset());\n\n\t\tthis.rows.next(d);\n\t}\n\n\tpublic updateColumns() {\n\t\tconst c = this.filterHiddenColumns(this.rawColumns);\n\t\tthis.columns.next(c);\n\t}\n\n\tpublic updateFilteredData() {\n\t\tthis.filteredData.next(this.filterData(this.rawData, this.filters));\n\t}\n\n\t// ---------- ABSTRACT HELPERS ---------- //\n\n\tpublic filterData(data, filters: Filter[]) {\n\t\tlet d = data.slice();\n\n\t\tfilters.forEach((filter) => {\n\t\t\td = filter.parseData(d);\n\t\t});\n\n\t\treturn d;\n\t}\n\n\tpublic sortData(data, key, order = 'asc') {\n\t\tif (!data || !data.sort || !key) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst d = data.slice();\n\t\td.sort((a, b) => {\n\t\t\tif (a[key] < b[key]) {\n\t\t\t\treturn order === 'asc' ? -1 : 1;\n\t\t\t}\n\n\t\t\tif (a[key] > b[key]) {\n\t\t\t\treturn order === 'asc' ? 1 : -1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\n\t\treturn d;\n\t}\n\n\tpublic selectData(data, limit, offset) {\n\t\tif (data && limit >= 0 && offset >= 0) {\n\t\t\treturn data.slice(offset, offset + limit);\n\t\t}\n\t\treturn data;\n\t}\n\n\tpublic filterHiddenColumns(columns) {\n\t\treturn columns.filter((o) => {\n\t\t\treturn !o.hidden;\n\t\t});\n\t}\n}\n"],"names":["Injectable","EventEmitter","Component","Input","Output","DEFAULT_MESSAGES.NO_DATA","DEFAULT_MESSAGES.LOAD_DATA","DEFAULT_MESSAGES.NO_COLUMNS","ChangeDetectionStrategy","ViewChild","ViewContainerRef","ComponentFactoryResolver","ChangeDetectorRef","Directive","HostBinding","NgModule","CommonModule","FormsModule","BehaviorSubject"],"mappings":"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"}
