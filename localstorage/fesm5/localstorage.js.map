{"version":3,"file":"localstorage.js.map","sources":["ng://localstorage/lib/localstorage/localstorage.conf.ts","ng://localstorage/lib/localstorage/localstorage.helper.ts","ng://localstorage/lib/localstorage/localstorage.polyfill.ts","ng://localstorage/lib/localstorage/services/localstorage.service.ts","ng://localstorage/lib/localstorage/localstorage.module.ts","ng://localstorage/lib/localstorage/localstorage.decorator.ts","ng://localstorage/lib/localstorage/store/localstorage/localstorage.enhancer.ts","ng://localstorage/lib/localstorage/store/store.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { LocalstorageConfig } from './types/localstorage.types';\n\nexport const LOCALSTORAGE_CONFIG: InjectionToken<LocalstorageConfig> = new InjectionToken<LocalstorageConfig>('localstorageConfig');\n\nexport const DEFAULT_LOCALSTORAGE_CONFIG: LocalstorageConfig = {\n\tstorageType: 'localStorage',\n};\n","import { isEqual } from 'lodash-es';\nimport { PathSelector, Selector } from './types/localstorage.types';\n\nexport class LocalstorageHelper {\n\tstatic comparator = isEqual;\n\n\t// select data from the storage for the provided selector\n\tstatic select(storage: any, selector: Selector): any {\n\t\tif (!storage) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!selector) {\n\t\t\treturn storage;\n\t\t}\n\n\t\tif (typeof selector === 'function') {\n\t\t\treturn selector(storage);\n\t\t}\n\n\t\tif (Array.isArray(selector)) {\n\t\t\treturn this.verifyPath(storage, selector);\n\t\t}\n\n\t\treturn this.verifyPath(storage, [selector]);\n\t}\n\n\t// verify the key matches with the selector\n\t// property selector: compare the key with the selector\n\t// path selector: verify the key is the last item in the path\n\t// function selector: always return true\n\tstatic keyMatches(key: string, selector: Selector): Boolean {\n\t\tconst keyMatchesSelector = key === selector;\n\t\tconst keyInSelector = Array.isArray(selector) ? selector.indexOf(key) >= 0 : false;\n\t\tconst selectorIsFunction = typeof selector === 'function';\n\n\t\treturn keyMatchesSelector || keyInSelector || selectorIsFunction;\n\t}\n\n\t// verify a path exists in an object\n\tstatic verifyPath(data?: any, selector?: PathSelector) {\n\t\tif (!data || !selector) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet curr = data;\n\n\t\tfor (let i = 0; i < selector.length; i += 1) {\n\t\t\tif (curr.hasOwnProperty(selector[i])) {\n\t\t\t\tcurr = curr[selector[i]];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\treturn curr;\n\t}\n\n\tstatic updateOrCreatePath(state?: any, selector?: PathSelector, newValue?: any) {\n\t\tif (!state || !selector) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet curr = state;\n\t\tlet i = 0;\n\n\t\tfor (i = 0; i < selector.length; i += 1) {\n\t\t\tif (!curr.hasOwnProperty(selector[i])) {\n\t\t\t\tcurr[selector[i]] = {};\n\t\t\t}\n\n\t\t\tif (i === selector.length - 1) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcurr = curr[selector[i]];\n\t\t}\n\n\t\tcurr[selector[i]] = newValue;\n\n\t\treturn state;\n\t}\n\n\tstatic parseJSON(key: string, json: string): any {\n\t\ttry {\n\t\t\treturn JSON.parse(json);\n\t\t} catch (e) {\n\t\t\tconsole.warn(`Parsing key \"${key}\" in localstorage failed, ignoring value.`); // tslint:disable-line:no-console\n\t\t\treturn String(json);\n\t\t}\n\t}\n}\n","export class MemoryStorage {\n\tpublic get length(): number {\n\t\treturn this.store.size;\n\t}\n\n\tpublic get storage(): any {\n\t\treturn Array.from(this.store.entries()).reduce((acc, curr: [string, any]) => ({\n\t\t\t...acc,\n\t\t\t[curr[0]]: curr[1],\n\t\t}), {});\n\t}\n\n\tprivate store = new Map();\n\n\tpublic key(index: number): any {\n\t\treturn Array.from(this.store.keys())[index];\n\t}\n\n\tpublic getItem(key: string): any {\n\t\treturn this.store.get(key);\n\t}\n\n\tpublic setItem(key: string, value: any): void {\n\t\tthis.store.set(key, value);\n\t}\n\n\tpublic removeItem(key: string): void {\n\t\tthis.store.delete(key);\n\t}\n\n\tpublic clear(): void {\n\t\tthis.store.clear();\n\t}\n}\n\nconst storage = new MemoryStorage();\n\nexport default new Proxy(storage, {\n\tget: function (target: any, name, receiver) {\n\t\tif (name in target) {\n\t\t\treturn Reflect.get(target, name, receiver);\n\t\t}\n\n\t\tif (name in target.__proto__) {\n\t\t\treturn target.__proto__[name];\n\t\t}\n\n\t\tif (target.storage) {\n\t\t\treturn target.getItem(name);\n\t\t}\n\t},\n\townKeys: function (target: any) {\n\t\treturn Object.keys(target.storage); // return stored keys when storage keys are requested\n\t},\n\tgetOwnPropertyDescriptor() {\n\t\treturn {\n\t\t\tenumerable: true, // ensure stored keys kan be iterated\n\t\t\tconfigurable: true,\n\t\t};\n\t},\n});\n","import { Inject, Injectable } from '@angular/core';\nimport { WINDOW } from '@acpaas-ui/ngx-components/utils';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/map';\n\nimport { LOCALSTORAGE_CONFIG, DEFAULT_LOCALSTORAGE_CONFIG } from '../localstorage.conf';\nimport { Selector, PathSelector, Comparator, LocalstorageConfig } from '../types/localstorage.types';\nimport { LocalstorageHelper } from '../localstorage.helper';\nimport memoryStorage from '../localstorage.polyfill';\n\n\n// @dynamic\n@Injectable()\nexport class LocalstorageService {\n\tpublic static instance: LocalstorageService;\n\n\tpublic get instance(): LocalstorageService {\n\t\treturn LocalstorageService.instance;\n\t}\n\n\tpublic set instance(instance: LocalstorageService) {\n\t\tif (LocalstorageService.instance) {\n\t\t\treturn;\n\t\t}\n\n\t\tLocalstorageService.instance = instance;\n\t}\n\n\tpublic storageType: string;\n\tpublic identifier: string;\n\tprivate storage: Storage;\n\tprivate subscribers: Map<Selector, BehaviorSubject<any>> = new Map<Selector, BehaviorSubject<any>>();\n\n\tconstructor(\n\t\t@Inject(LOCALSTORAGE_CONFIG) private localstorageConfig,\n\t\t@Inject(WINDOW) private $window\n\t) {\n\t\t// store a reference to the instance on the service so the decorator has access to instance methods\n\t\tthis.instance = this;\n\n\t\tthis.setStorage(localstorageConfig);\n\t\tthis.validateStorage();\n\t}\n\n\tpublic setStorage({\n\t\tstorageType,\n\t\tidentifier = '',\n\t}: LocalstorageConfig = {}): void {\n\t\tthis.storageType = this.verifyStorageType(storageType, 'localStorage');\n\t\tthis.storage = this.storageType === 'memory' ? memoryStorage : this.$window[this.storageType];\n\n\t\tthis.identifier = identifier;\n\t}\n\n\t/**\n\t * Browser Storage api\n\t */\n\tpublic setItem(key: string, value: any): void {\n\t\tthis.storage.setItem(key, JSON.stringify(value));\n\t\tthis.updateSubscribers(key);\n\t}\n\n\tpublic getItem<T = any>(key: string): T {\n\t\treturn LocalstorageHelper.parseJSON(key, this.storage.getItem(key));\n\t}\n\n\tpublic removeItem(key: string): void {\n\t\tthis.storage.removeItem(key);\n\t\tthis.updateSubscribers(key);\n\t}\n\n\tpublic clear(...args): void {\n\t\tthis.storage.clear.apply(this.storage, args);\n\t\tthis.updateSubscribers();\n\t}\n\n\t/**\n\t * Decorator api\n\t */\n\tpublic select<T = any>(selector: Selector, comparator: Comparator = LocalstorageHelper.comparator): BehaviorSubject<T> {\n\t\t// if the selector is an array, add a subscription for the last item\n\t\tif (Array.isArray(selector)) {\n\t\t\treturn (this\n\t\t\t\t.getChildSubscription(selector, this.select(selector[0]))\n\t\t\t\t.distinctUntilChanged(comparator) as any) as BehaviorSubject<T>; // make sure it is only triggered when the value changes\n\t\t}\n\n\t\treturn this\n\t\t\t.addSubscriber<T>(selector)\n\t\t\t.distinctUntilChanged<T>(comparator) as BehaviorSubject<T>;\n\t}\n\n\tpublic clearSubscribers(): void {\n\t\tthis.subscribers.forEach(subscriber => {\n\t\t\tsubscriber.unsubscribe();\n\t\t});\n\t}\n\n\t// get a clone of the current stored values\n\tpublic getStorageSnapshot<T = any>(): T {\n\t\tif (this.storageType === 'memory') {\n\t\t\treturn {} as T;\n\t\t}\n\n\t\treturn {...Object.keys(this.storage).reduce((acc, prop) => {\n\t\t\tacc[prop] = LocalstorageHelper.parseJSON(prop, this.storage[prop]);\n\t\t\treturn acc;\n\t\t}, {})} as T;\n\t}\n\n\t// return or create a behaviorsubject from the selected value\n\tpublic addSubscriber<T = any>(selector: Selector): BehaviorSubject<T> {\n\t\tif (!this.subscribers.has(selector)) {\n\t\t\tthis.subscribers.set(selector, new BehaviorSubject<T>(LocalstorageHelper.select(this.getStorageSnapshot(), selector)));\n\t\t}\n\n\t\treturn this.subscribers.get(selector);\n\t}\n\n\tprivate validateStorage(): void {\n\t\tconst storage = this.getStorageSnapshot();\n\n\t\tif (!this.identifier && !storage['aui-storage']) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.identifier === storage['aui-storage']) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clear();\n\n\t\tif (this.identifier) {\n\t\t\tthis.setItem('aui-storage', this.identifier);\n\t\t}\n\t}\n\n\t// fetch or create a subscription for the parent\n\t// subscribe to said subscription and return a new subscriber from the value\n\tprivate getChildSubscription<T = any>(selector: PathSelector, parentSubscription: BehaviorSubject<any>): BehaviorSubject<T> {\n\t\tconst subscriber = this.addSubscriber<T>(selector);\n\n\t\tparentSubscription\n\t\t\t.map((nextValue => {\n\t\t\t\treturn LocalstorageHelper.verifyPath(nextValue, selector.slice(1)); // filter out the selected path value\n\t\t\t}).bind(this))\n\t\t\t.subscribe((nextValue: T) => {\n\t\t\t\tsubscriber.next(nextValue);\n\t\t\t});\n\n\t\treturn subscriber;\n\t}\n\n\t// update all subscribers\n\t// if a key is provided, matching will prevent useless updates\n\tprivate updateSubscribers(key?: string): void {\n\t\tconst storage = this.getStorageSnapshot();\n\t\tthis.subscribers.forEach((subscriber: BehaviorSubject<any>, selector: Selector) => {\n\t\t\tif (key !== undefined && !LocalstorageHelper.keyMatches(key, selector)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsubscriber.next(LocalstorageHelper.select(storage, selector));\n\t\t});\n\t}\n\n\t// verify the prefered storagetype exists, fall back to \"localStorageâ or memory\n\tprivate verifyStorageType(storageType?: string, defaultValue: string = 'memory'): string {\n\t\tconst storageTypeExists = this.$window.hasOwnProperty(storageType) && this.$window[storageType] instanceof this.$window.Storage;\n\n\t\tif (storageTypeExists) {\n\t\t\treturn storageType;\n\t\t}\n\n\t\t// if storage type does not exist, verify defaultValue until found or memory was set as default\n\t\treturn storageType === 'memory' ? 'memory' : this.verifyStorageType(defaultValue);\n\t}\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { WINDOW } from '@acpaas-ui/ngx-components/utils';\n\nimport {\n\tLocalstorageConfig,\n} from './types/localstorage.types';\nimport {\n\tLocalstorageService,\n} from './services/localstorage.service';\nimport {\n\tLOCALSTORAGE_CONFIG,\n\tDEFAULT_LOCALSTORAGE_CONFIG,\n} from './localstorage.conf';\n\n@NgModule({\n\timports: [\n\t],\n\tproviders: [\n\t\t{ provide: LOCALSTORAGE_CONFIG, useValue: DEFAULT_LOCALSTORAGE_CONFIG },\n\t\t{ provide: WINDOW, useValue: window },\n\t\tLocalstorageService,\n\t],\n})\nexport class LocalstorageModule {\n\tstatic forRoot(\n\t\tlocalstorageConfig: LocalstorageConfig = DEFAULT_LOCALSTORAGE_CONFIG\n\t): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: LocalstorageModule,\n\t\t\tproviders: [\n\t\t\t\t{ provide: LOCALSTORAGE_CONFIG, useValue: localstorageConfig },\n\t\t\t\t{ provide: WINDOW, useValue: window },\n\t\t\t\tLocalstorageService,\n\t\t\t],\n\t\t};\n\t}\n\n\tconstructor(\n\t\tprivate localstorageService: LocalstorageService\n\t) {}\n}\n","import { Selector, Comparator, PropertyDecorator } from './types/localstorage.types';\nimport { LocalstorageService } from './services/localstorage.service';\n\nexport function storage(selector?: Selector, comparator?: Comparator): PropertyDecorator {\n\n\treturn function decorate(target: any, key: string): void {\n\t\tlet bindingKey = selector;\n\t\tif (!selector) {\n\t\t\tbindingKey = (key.lastIndexOf('$') === key.length - 1) ? key.substring(0, key.length - 1) : key;\n\t\t}\n\n\t\tfunction getter() {\n\t\t\treturn LocalstorageService.instance.select(bindingKey, comparator);\n\t\t}\n\n\t\t// Replace decorated property with a getter that returns the observable.\n\t\tdelete target[key];\n\n\t\tObject.defineProperty(target, key, {\n\t\t\tget: getter,\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t});\n\t};\n}\n","import { Reducer, StoreCreator, StoreEnhancer, Store, StoreEnhancerStoreCreator } from 'redux';\nimport { NgRedux } from '@angular-redux/store';\nimport { Injectable } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/first';\n\nimport { isEqual } from 'lodash-es';\n\nimport { LocalstorageHelper } from '../../localstorage.helper';\nimport { LocalstorageService } from '../../services/localstorage.service';\nimport { PropertySelector, PathSelector } from '../../types/localstorage.types';\n\n@Injectable()\nexport class LocalstorageReduxPlugin {\n\tprivate storeSubscription: Subscription;\n\tprivate subscribers: Map<PropertySelector|PathSelector, Subscription> = new Map<PropertySelector|PathSelector, Subscription>();\n\n\tconstructor(\n\t\tprivate ngRedux: NgRedux<any>,\n\t\tprivate localstorageService: LocalstorageService\n\t) {}\n\n\tenhancer<T = any>(selectors?: Array<PropertySelector|PathSelector>): StoreEnhancer<T> {\n\t\tconst storedState = this.selectFromState(selectors);\n\n\t\tthis.subscribe(selectors);\n\n\t\treturn (createStore: StoreEnhancerStoreCreator<T>): StoreEnhancerStoreCreator<T> => (\n\t\t\treducer: Reducer<T>,\n\t\t\tinitialState: any\n\t\t): Store<T> => {\n\t\t\treturn createStore(reducer, {\n\t\t\t\t...initialState,\n\t\t\t\t...storedState,\n\t\t\t});\n\t\t};\n\t}\n\n\tsubscribe(selectors?: Array<PropertySelector | PathSelector>): void {\n\t\tthis.ngRedux.select()\n\t\t\t.filter(store => !!store)\n\t\t\t.first()\n\t\t\t.subscribe(store => {\n\t\t\t\tif (!selectors) {\n\t\t\t\t\tthis.subscribeSelector('reduxState');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tselectors.forEach(selector => this.subscribeSelector(selector));\n\t\t\t});\n\t}\n\n\tprivate subscribeSelector(selector: PropertySelector | PathSelector): void {\n\t\tif (!selector) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst subscriber = this.subscribers.get(selector);\n\n\t\tif (subscriber) {\n\t\t\tsubscriber.unsubscribe();\n\t\t}\n\n\t\tthis.subscribers.set(selector, this.ngRedux.subscribe(() => {\n\t\t\tconst selectorKey = Array.isArray(selector) ? selector.join('.') : String(selector);\n\t\t\tconst stored = this.localstorageService.getItem(selectorKey);\n\t\t\tconst newValues = selector === 'reduxState' ? this.ngRedux.getState() :\n\t\t\t\tLocalstorageHelper.select(this.ngRedux.getState(), selector);\n\n\t\t\tif (isEqual(stored, newValues)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.localstorageService.setItem(selectorKey, newValues);\n\t\t}) as any);\n\t}\n\n\tprivate selectFromState(selectors?: Array<PropertySelector|PathSelector>): any {\n\t\tif (!selectors || !selectors.length) {\n\t\t\treturn this.localstorageService.getItem('reduxState');\n\t\t}\n\n\t\treturn selectors.reduce((acc, selector) => {\n\t\t\tconst storedData = LocalstorageHelper.select(this.localstorageService.getStorageSnapshot(), selector);\n\t\t\tconst pathSelector = Array.isArray(selector) ? selector : [selector];\n\n\t\t\tLocalstorageHelper.updateOrCreatePath(acc, pathSelector, storedData);\n\n\t\t\treturn acc;\n\t\t}, {});\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { NgReduxModule } from '@angular-redux/store';\nimport { LocalstorageReduxPlugin } from './localstorage/localstorage.enhancer';\n\n@NgModule({\n\timports: [ NgReduxModule ],\n\tproviders: [ LocalstorageReduxPlugin ],\n})\nexport class LocalstorageStoreModule {}\n"],"names":["tslib_1.__assign"],"mappings":"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"}
